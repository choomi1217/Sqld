참석자 1 
저희 이름은 조시현입니다. 지형이고 조지현 제 메일 주소가 있죠. 
오라킨 진 작품입니다. 지메일 아니더라도 앞에 오락통 뭉치고 다 저한테 와요. 
어이 제가 이제 메일을 모든 걸 다 열어볼 수 없으니까 맨 앞장이시죠 주로는 이제 지메일하고 네이버를 많이 사용하니까

참석자 1 
이 질문하실 일이 있으시면 저한테 연락 주실 분 있으시면 이메일이나 네이버 쪽으로 연락을 주시면 되겠습니다. 
제가 그동안 거쳐왔던 회사들이고요 지금은 이제 dbl이라는 회사를 설립을 해서 대표로 컨설턴트로 관리를 하고 있습니다. 
제가 주로 하는 일은 데이터베이스를 중심으로 설계도 하고요

참석자 1 
진단도 하고 그다음에 트임 그리고 성 정체 그리고 처럼 교육하는 일을 주로 하고 있습니다. 
제가 회사 소개를 좀 먼저 드리면 여러분들 네티양이라는 회사 혹시 아시는 분 계세요. 
젊으신 분들 잘 보이실 텐데 아마 저처럼 연식이 좀 되신 분들은 기억하실 거예요. 
인터넷 초창기 시대에 굉장히 잘 나가던 인터넷 포털

참석자 1 
업체입니다. 지금의 네이버 카카오처럼 잘 나가는 회사였는데 그 회사 이름을 제가 오늘 따져보니까 네트웍의 줄임말 네트웍의 줄임말 넷에다가 iaan이라는 정미사를 붙였습니다. 
ia이라는 것이 여러분들 테크니션 뮤지션 이렇게 할 때 뒤에 붙인 정미사죠

참석자 1 
스페셜 리스트 또는 사람을 의미하는 말이에요. 
네트웍의 줄인 말 내가 전문가를 뜻하는 an을 붙여서 내기하는 선생님을

참석자 2 
네
참석자 1 
갖게 된 걸 제가 이제 차관을 해서 제가 좋아하는 데이터 베이스 데이터 베이스 주말 db에다가 마찬가지로 아이n을 붙여서 db안이라는 회사이름을 갖게 됐습니다. 
그래서 회사 이름은 물에서 아시는 것처럼 최고 db 전문가 그룹을 지향하는 컨설팅 회사라고

참석자 3 
생각을 해 주시면 되겠습니다.
참석자 1 
저희가 주로 하는 일은 컨설팅을 하고 있고요 이 설계라든지 트닝 컨설팅 주로 하고 있고 또 솔루션도 개발합니다. 
개발하고 잘 아시겠지만 저희 출판도 많이 하고 있고요 비비 전문 교육을 주로 하고 있습니다. 
왼쪽은 저희 회사 홈페이지예요. 홈페이지고 지금 재구축 중에 있어요. 
아마 1월 중에 오픈이 될 것 같은데 지금

참석자 1 
기존 홈페이지를 좀 호접했는데 그래도 조금 가다듬어서 새로 개발하는 작업을 하고 있고 아마 1월 중에 오픈이 될 것 같습니다. 
오른쪽은 저희가 운영하는 카페죠 여러분들 아마 카페를 통해서 대부분 교육을 알고 참여하셨을 거니까 일부 허용 가입이 돼 있을 거라고 생각을 하고 수험 가이 안 되신 분들은 가입을 하셔서 활동을 좀

참석자 1 
부탁드리도록 하겠습니다.
참석자 1 
오라크를 대표하는 양배 산맥이 있는데 혹시 아십니까 전산 눈수라는 분하고 토마스 카이트라는 분이 있어요. 
아시는 분 계실까요. 시임 공부 좀 해보신 분들은 좀 아실 텐데 아마 보니까 이번에 초보자초 말 그대로 초보분들이 많이 오셨더라고요 그래서  모르신 분들도 계실 텐데

참석자 1 
두 분이 오라클 쪽으로 아주 양대 산맥이라고 말할 수 있는 게 유명한 두 분의 거장이세요. 
그래서 여기 쪽에 계신 분은 조한단 노시라는 분은 오라클 직원도 아닌데 굉장히 그 오라클에 대한 아주 심도 있는 책들을 많이 조수를 했어요. 
오라클을 막 코너를 연구해가지고
참석자 1 
인턴한 내용들을 굉장히 많이 밝혀냈고 그런 내용들을 기반으로 책을 많이 집필을 하셨죠. 
그만 우측에 있는 분은 토마스 카이트라는 분은 공식 직함인 오라클 부사장이에요. 
오라클 직원인 거죠. 오라클 직원이지만 이분은 그런 인턴 한 내용보다는 어떻게 하면 오라클을 효과적으로 실험적으로 잘 활용할 것인지에 대한 그런 부분에 중점을 두고

참석자 1 
실용적인 책들을 많이 집필을 해내신 분이다. 
제가 알기로 작년에 두 분 다 은퇴를 하셨어요. 
작년 재작년에 은퇴를 하신 걸로 알고 있고 그래서 방금 소개해드린 토마스 카이트와 어깨를 나란히 하는 대한민국의 어학교 전문가가 있습니다.

참석자 1 
지금도 제가 이 마스크를 써서 얼굴이 잘 안 보이실 텐데 니 왼쪽에 있는 부분 제가 2010년도에 오라클 오픈월드에 참가를 했는데 그때 토마스 하이트가 강연하는 강연에 참여를 했고 끝나고 사진을 같이 찍을 수 있는 사진을 찍어주셨더라고요 그래서 사진을 찍고 보니까 이분이 서약 사람인데도 불구하고 키가 굉장 작아서

참석자 1 
저랑 어깨를 보시다시피 나란히 하셨으니까 제가 그래서 이제 그때부터 제가 토마스카이트 어깨를 나란히 한다 이런 말씀 농담하고 있습니다. 
어깨를 나란히 한다는 말은 좀 농담이고 제가 굉장히 존경하는 분이에요. 
존경하는 분이 저는 이분의 영향을 많이 받았습니다. 
어떻게 보면 토마스 카이트의 팬인 거죠. 
제가 네
참석자 1 
성능 관리 방법론이라든지 이런 것들을 많이 영향을 받았고요 그 사인도 이렇게 받아왔어 그래서 많은 분들이 이제 제가 이제 오라클을 책도 많이 내고 오라클를 잘한다고 하니까 제 저를 db로 많이 생각하시는데 저는 사실 dba는 아닙니다. 
물론 이제 dba 생활을 해본 적도 있지만 저는 dba 생활보다는 개발자로서 생활을 더 많이 했어요. 
그렇기 때문에 저는
참석자 1 
데이터베이스를 어떻게 잘 관리할 것인지 그런 부분보다는 어떻게 하면 오라클을 실용적으로 그리고 효과적으로 잘 활용할 것인지에 더 관심을 많이 갖고 연구 활동을 하고 지표도 하고 교육을 해오고 있습니다. 
그 토마스 카이트와 비슷한 방향성을 갖고 있다는 거죠. 
그래서 저는 이제 주로 효과적인 데이터 베이스 활용에 관심이 많고

참석자 1 
그래서 이제 에스크 옵티마이저라든지 트랜지션과 동일성 제어 그다음에 db 애트로션 구조 및 성능 개선 데이터베이스 성능 진단 그다음에 설계 설계 중에서도 이제 성능에 관심이 많다. 
보니까 주로 물리 모델링 쪽에 관심을 많이 갖고 연구 활동을 진행하고 있습니다. 
그다음에 어떻게 하면 sk를 고급스럽게 잘 표현할 것인지 이런 부분에 관심이 많습니다. 
제가 그동안 집필했던 책들이고요
참석자 1 
2008년에 아까 소개해드렸던 존안전 리스 존 레스가 지출한 코스페이스 노락클 펀더먼트라는 책을 저희 동료 직원들이랑 같이 번역을 했어요. 
기용 기반 노락걸이라는 책으로 번역을 했고 그다음에 여러분 잘 아시는 오락표 선문보다 얼리할 거 1번을 5월에 지표를 했고 그다음에 2010년 1월에 사실 2009년에 다 지표 다 끝내놓고

참석자 1 
한 해 두 번 다 내는 것보다는 좀 해를 달리해서 하는 게 좋겠다 싶어서 기다렸다 다렸다가 2010년 2월에 입원을 지킬 한 거지 제가 이렇게 책을 출간하고 열심히 활동하던 그 무렵에 데이터 진흥원에서 여러분 잘 아시는 sql sq 전문가 자격증 론칭을 했죠. 
제가 전문의로 참여를 해서 수험서를 집필하는 일을 제가 이렇게 했었고요

참석자 1 
그다음에 월크 성문과과를 책을 내고 나서 많은 분들이 책이 좀 너무 두껍고 너무 디테일하고 어렵다. 
이제 그런 평가들을 많이 해 주셨어요. 
그래서 제가 원래 이 책이
참석자 2 
네
참석자 1 
사실 개발자를 위한 책이었거든요. 제가 아까도 말씀드린 것처럼 저는 이제 개발자에 관심이 많다. 
보니까 개발자들을 대상으로 이제 강의를 많이 해왔었고 그 내용들을 기반으로 책을 쓴 거예요. 
책을 썼는데 너무 이제 제가 욕심이 많아서 책에 너무 많은 내용을 담다 보니까 좀 개발자들이 보기에 좀 어려워진 그런 측면이 있었습니다. 
그래서
참석자 1 
그 취지에 맞게끔 개발자들이 봐야 될 내용 핵심 내용 중심으로 새로 집필한 책이 2018년 6월에 나온 친전 스키 트윙입니다 고요 오늘 여러분들이 오늘 이후로 교육하실 내용은 친전 스키 티의 그러한 내용이 되겠고요 재작년 12월에 국가국민 skb 핵심 높은 책을 제출했고 또 작년 9월에는

참석자 1 
sqp 캐스먼트 1번과 2번을 같이 동시에 gp를 했습니다. 
출간을 했습니다. 저는 국가공인 skt 자율 검증 핵심 자율검증 전문위원으로 활동을 하고 있고요 또 dap 쪽에서도 마찬가지로 전문위원 활동을 하고 있습니다. 
그리고 2010년에 데이터 진흥원과 기지 산업 협의회에서 공공 주관으로

참석자 1 
우수 디인상을 제작을 했는데 제가 제1회 때 우수 디인상을 수상을 한 바 있습니다.

참석자 1 
말씀드린 오락 성문보다 1번과 2번이에요. 
2번 아시다시피 굉장히 많은 내용들을 다루고 있죠 제가 이제 말씀드린 것처럼 욕심을 좀 많이 내서 개발자를 위해서 쓴 책임에도 불구하고 굉장히 좀 내용을 좀 디테일하게 쓰다 보니까 많이들 어려워하시더라고요 두꺼워서 베개로 쓰면 좋다 느낌을 하시더라고요 많이 좀 아팠어요. 
개발자들을 위해서 쓴 책인데 개발자들이 어려워 하고

참석자 1 
그가 개발자들은 어려서 못 보고 주로 이제 dj이라든지 저는 이제 저랑 같은 일을 하는 튜너들 어떻게 보면 저의 경쟁자들이 주로 보는 그래서 대부분의 우리 국내에서 활동하는 티너들은 대부분 이 책을 보고 트윙을 공부한다라고 저는 알고 있습니다. 
그래서 원래는 개발자를 대장으로 쓴 책인데 주로 피어들이 보는 책이 되버렸습니다. 
그래서
참석자 1 
여기 있는 내용 중에 개발자들에게 조금 핵심적인 내용 위주로 새로 집회할 책이 친절하 인이 되겠

참석자 1 
이 차트는 뭘까요. 제 강의 평가입니다. 
강의를 하고 나서 선물을 받아 보니까 36이 좋게 나오더라고요 5점 대부분 다 5점 주시고 가끔 4점을 주시고 3점 밑으로는 어려운 걸 볼 수가 있습니다. 
그 외에도 여러 가지 말씀해 주시는데 그동안 들었던 강의 중에 제일 알차고 만족스러웠다. 
지금까지 받아온 교육 중 최고였다.
참석자 1 
수업료를 더 받으면 좋겠다. 그런 분도 계셨어요. 
본인은 받았으니까 다음 주부터 더 받으라는 얘기 같은데 행한 기분이었다. 
저희가 이제 가끔 고객사에 이제 쿠폰을 드리거든요. 
어떤 기계 분이 갑자기 팀장님이 부르더니 야 쿠폰을 받았는데 다음 주에 교육을 한다더라 교육을 좀 가라고 그래갖고 이 db 분이 생각도 없이 다음 주에 교육으로 끌려 온 거예요. 
팀장님이 가라고 하니까
참석자 1 
아무 생각 없이 왔다가 교육을 딱 받았는데 너무 본인한테 맞는 적절한 교육을 딱 받고 너무 또 교육량도 좋고 하니까 꿈만 마시면서 생지한 기분이 들었다. 
이렇게 표현할 수 저자 직강의 어떠세요. 
저자 직강의 유력을 실감했다. 퍼펙트하고 정말 알은 강의였다.

참석자 1 
여러 가지 좋은 말씀 많이 하시지만 제가 가장 좋아하는 말은 바로 이겁니다. 
빨간색으로 표현이 돼 있죠 현장에서 필요한 부분을 명확히 전달하더라 제가 책을 아까 말씀드린 것처럼 쓴 데 쓰는 데 2009년도에 1년 채 안 걸렸어요. 
책을 두 동을 합치면 1 몇백 개가 되는 방대한 분량이냐 책임에도 불구하고 쓰는 데 1년이 채 안 걸렸거든요.

참석자 1 
그럴 수 있었던 것은 제가 그 이전에 10년 이상 투영을 다니면서 계속 현장을 다니면서 추적해 놓은 자료들을 책을 지출했기 때문에 그런 거예요. 
현장에서 제가 연구실 안에서 쓴 책이 아니고 현장을 다니면서 얻은 어떤 노하우를 집필한 거기 때문에 많은 분들이 책을 읽는 과정에서

참석자 1 
현장감을 많이 느낀다 그런 평가를 많이 해주고 계십니다. 
실제로 spmp 교제가 이렇게 보시면 제책 내용 기반으로 돼 있지 않습니까 그래서 자격증이 너무 쓰는 게 어려워서 많이들 고생도 하시는데 자격증 취득 여부와 무관하게 취득 못했어도 공부하는 과정 속에서 너무 많은 것을 배우고 현장에서 많은 도움이 된다. 
그런 평가들을 다들 해 주고 계시는 이유가 바로 거기에 있다고 저는 평가를 합니다.

참석자 1 
그 외에도 저희 카페에도 많은 후기들을 올려주시는데 절대로 시간과 돈이 아깝지 않은 감이 없다. 
버릴 것이 하나도 없는 이 내용과 시간 부족한 것은 오직 시간 항상 시간이 부족합니다. 
짧은 시간에 너무 많은 내용이 다르다 보니까 시간이 부족해서 항상 늘 그게 아쉽고 그래서 저도 이번 강의를 준비하면서

참석자 1 
어떻게 하면 시간을 더 짧게 효율적으로 쓸 것인가 많은 고민을 하면서 준비를 했습니다. 
항상 시간이 부족했다는 점 그다음에 살다 강이었다. 
제가 강의를 잘하는 사람은 아니에요. 
제가 사실은 제일 자신 없어 했던 것이 이제 강의에 누군가 다른 사람들 앞에서 발표하고 저는 달전보다는 물변에 가깝거든요. 
그래서 강의하는 것에 대해서 굉장히 두려움을 많이 갖고

참석자 1 
힘들어했던 사람인데 이제 지금은 이제 많이 해서 익숙해진 것입니다. 
저는 강의를 잘하는 사람은 아니지만 적어도 제가 쓴 책 내용에 대해서만큼은 어느 누구보다도 정확하게 전달할 자신이 있기 때문에 그런 측면에서 여러분들에게 기대감을 드리기 위해서 잠깐 제 자랑을 해봤습니다. 
보시면 아시겠지만 제가 강의를 잘 못해요. 
말도 어눌하고 또 또 또 말이 빨라집니다. 
지금 제가 천천히 여러분이 노력하고 있는 건데

참석자 1 
시간이 부족해서 그런 것도 있겠지만 막 말이 빨라져요. 
그래서 상담 시작할 때 천천히 해 천천히 하는데 이게 잘 쉽지가 않더라고요

참석자 1 
아무튼 강의에 대해서 그런 기대감을 가지는 측면에서 말씀드렸고 제 소개를 이렇게 간단히 드렸습니다. 
드렸고 여러분들 좀 소개를 좀 받고 싶어요. 
근데 인원이 좀 많아요. 지금 제가 한 25분 정도 되는데 어떻게 할까요 소개를 좀 할까요. 
부담스러우시죠 한 10명쯤 13쯤 되면 하는데 지금 25명 되다 보니까

참석자 1 
소개 한 번씩 쭉 하고 나면 1시간 다 할 것 같아요. 
그래서 자기 소개는 생략하도록 하겠습니다.

참석자 1 
제가 이제 수업 시작하기 전에 설문을 좀 받았어요. 
설문을 받아 가 정리를 빅데이터 분석을 통해서 정리를 좀 해봤는데 애플 시장 개발자분들이 한 25분인데 20분밖에 답변 안 해주셔가지고 어떤 개발자분이 한 10명 10분 정도 계시고 dba라든지 또 db 엔지니어로 활동하시는 분도 8분 정도 계시고

참석자 1 
보통 튜닝 업무하시는 분들이 한두 분쯤 계시는데 지금 트닝 업무하시는 분들은 지금 없습니다 고 자격증 보유 현황을 보니까 skd가 많이 그래서 sqlp를 취득을 하고 이어서 sqlp를 취득하려고 준비하시는 분들이 많이 들어오시지 않나 싶습니다. 
50p가 5 분 계시고 그다음에 sql d나 p 자격증을 아는지 또 도전해봤는지를 조사해 보니까 sqld 치료자 분이 10분 정도 계시고

참석자 1 
sklp는 한 분만 지금 도전을 해보신 상태더라고

참석자 2 
잠만
참석자 1 
예전 같은 경우는 이미 취득한 분들도 공습 차원에서 이렇게 몇 분씩 들어오곤 하셨는데 지금 취득하신 분은 한 분도 안 계시고 도전한 분도 한 분밖에 안 계시는 것 같아요. 
읽어본 팀 sl 트윙 책도 읽으면 한 번도 안 보신 분이 9분 한번 보신 분이 9분 2번쯤 보신 분이 2분 정도 계시고 친절한 스킬 팀은 거의 다

참석자 1 
나름 인기 있는 책이고 잘 나가는 책인데 그니까 거의 다 안 오셨어요. 
그래서 제가 이제 선물을 받아본 결과 진짜 소비자들만 오셨구나 진짜 소비자들만 오셨구나 보통 이제 spp 따신 분도 오시고 보통 몇 번씩 도전하시면 이제 안 되니까 오시는데 이번 기수는 진짜 소비자들만 오시는 것 같아요. 
그래서 거기에 맞춰서 좀 더 수준을 낮춰서 진행해야 되겠다. 
이렇게 생각을 하고
참석자 1 
실행 계획 확인 가능한지를 좀 물어봤더니 여덟 분이 실행계획 확인조차 해본 적이 없다. 
12분 정도는 실행 계획 정도는 이제 본 적은 있다. 
근데 해석 가능하냐 물어보니까 대부분 해석이 불가능하시고 한 여섯 분 정도가 이렇게 해석을 좀 할 줄 아신다 보시는 것처럼 트리스는 거의 다 안 떠보셨어요. 
한 분 정도만 트리스를 떠봤고 나머지 분들은 트레스를 확인조차 안 해보셨고

참석자 1 
조임 메서드를 이해하시냐 그랬더니 의외로 또 많이 또 조임 메서드 정도 내가 좀 안다 엘엘리온이 뭐고 특수 모디이 뭐고 피시이 뭔지는 그렇지 안다 신 걸 볼 수 있습니다. 
좀 아이러니하죠. 실행 계획도 확인을 해도 안 해보셨고 트레스도 안 해보셨는데 조용히 해서는 내가 좀 안다 제가 볼 때는 좀 어불 성설이에요. 
제대로 알고 있다라고 보기 어려운 거죠. 
실행 계획을 제대로 해석을 못하는데
참석자 1 
그러니까 단편적으로만 알고 계신 거예요. 
책에 나오는 책에 나오는 그래서 소량의 데이터는 mlg 대량의 데이터는 80조엔 이 정도로 알고 계시는 게 아닐까 이렇게 이해를 했습니다. 
아무튼 여러분들이 주신 설문 내용을 바탕으로 여러분들 수준에 맞게끔 진행해 나갈 것이고요 강의 계절입니다. 
밥상을 별로 차지 마시고 보시다시피 좀 좋습니다. 
그렇죠 굉장히 자수는 많은데 좋아요.
참석자 1 
녹음하시면 안 됩니다 가끔 이렇게 녹음하시는 분들 계시는데 녹음하시면 안 되겠고 촬영도 하시면 안 되겠고요 제가 이제 실습 과정이다. 
보니까 이제 서버를 준비했는데 제가 저희 직원에게 세상에서 가장 안 좋은 서버를 준비해달라고 했어요. 
저희가 튜닝 과정이지 않습니까 튜닝 과정이기 때문에 성능을 높이는 어떤 그런 활동들을 하는 건데 서브가 너무 좋아버리면 웬만하면 다 빨리 결과가 나와버리면 실습이 제대로 안 되기 때문에

참석자 1 
가장 안 좋은 서버를 준비를 했어요. 
그렇기 때문에 여러분들이 서버에 구하려는 작업들을 막 돌리고 있으면 안 되겠다. 
그런 것이죠. 그러면 이제 시술에 지장이 있을 수 있으니까 그다음에 이제 데이터를 다운받드하거나 그러시는 분도 계신데 이것도 좀 자제해 주셨으면 좋겠고요

참석자 1 
강의할 때마다 보면 이제 항상 특히 첫날 그러는데 저는 또 하나는 분들이 많이 제가 강의를 처음. 
시작할 때 이것 때문에 되게 많이 상처를 받았어요. 
다들 저도 화내는 것 같아서 부담도 많이 되고 나중에 알고 보면 다 좋으신 분들인데 긴장해서 그러신 것 같더라고요 저도 긴장했지만 아마 수강생분들도 좀 나면 긴장하시는 것 같아요. 
근데 이제 이게 긴장이 되면 저도 긴장이 되고 방이 잘 안 풀리더라고요 이렇게 살짝 웃어주시고

참석자 1 
해 주시면 강의가 더 잘 되지 않을까 싶습니다. 
그리고 질문을 좀 많이 해 주세요. 질문을 질문 안 해 주시면 그냥 저 혼자 일방적으로 이렇게 강의를 하다 보면 뭔가 이렇게 저하고 여러분 사이에 단절된 느낌이 들어요. 
그러면 막 진땀 나고 굉장히 힘듭니다. 
여러분들이 질문을 해 주시면 질문을 통해서 여러분들이 내용을 잘 이해하고 계시는구나 아니면 어려워하시는구나 그런 걸 제가 감을 잡고

참석자 1 
거기 맞게 조절할 텐데 질문도 안 해주시고 표정도 물 표정하시고 그러면 정말 강의가 힘들더라고요 그래서 저 혼자 일방적인 강의가 되지 않도록 모르신 거 있으면 적극적으로 질문해 주시고 나중에 끝나고 나서 그렇게 평가해 주는 분 계시더라고요 너무 어렵고 정말 힘들었다. 
질문 한 번도 안 하시고 호 혼자서만 어려워하시고 그냥 끝나시는 분들 계세요. 
그러지 마시고 저도 손을 들고 질문해 주시면 좋을 것 같습니다.

참석자 1 
내가 모르는 부분들은 다른 분도 모를 수 있다. 
그런 생각을 가지시고 질문해 주시면 좋을 것 같습니다. 
제가 강의 첫날 이렇게 좋은 데스타 뉴스가 무엇인가를 취합을 해서 1시간에서 1시간 반 정도 길면 2시간 정도 좀 얘기를 해드리고 시작한 게 있는데 오늘은 제가 과감히 생략하기로 했어요. 
아까도 말씀드린 것처럼 항상 끝에 가서 시간이 부족해가지고

참석자 1 
어떻게 보면 좀 잔소리가 아까 얘기들이에요. 
성공 수준이 되게 중요하고 개발자들의 인식이 어떻고 첫 번째 같은 얘기들이죠. 
왜 개발자들이 왜 이렇게 개발을 하는지 모르겠다. 
답답하다 그런 얘기들이에요. 좀 너무 그런 때 상식에 기초한 개발들을 많이 하고 계시다 왜 그런지 모르겠다. 
이런 얘기를
참석자 2 
제가
참석자 1 
해고 시작하는데 오늘 과거의 생략을 하고 그냥 하고 본론으로 바로 넘어가겠습니다. 
항상 뒤가 무거워지는 지점이 있어서
참석자 1 
그래서 여러분들 교재로 바로 들어갈 텐데요. 
교재 2장을 바로 시작하겠습니다. 2장

참석자 1 
일정은 이제 트레이스 확인하고 실행자 확인하고 그런 내용이라서 그건 제가 이제 사 이후에 그리고 졸린 시간을 그때 좀 실습을 하도록 하고 그다음에 2장을 먼저

참석자 1 
교재 다 받으셨죠. 제 돼 있으니까 제가 드리겠습니다.

참석자 1 
여러분들 21세기에 가장 핵심적인 제품을 꼽으라면 여러분들은 뭘 꼽으시겠어요.

참석자 1 
스마트폰이 아마 대부분 스마트폰을 떠올리실 것 같아요. 
근데 저는 사실은 스마트폰에 큰 실성을 느끼지 못해요. 
저는 이제 주로 pc에서 작업을 하기 때문에 저한테 스마트폰이라고 하면 주로 이제 이동하면서 사용할 수 있는 인터넷 검색기 정도에 불과해요.

참석자 1 
저는 게임을 전혀 안 하지 않거든요. 
제가 마지막으로 한 게임 테트리스이기 때문에 게임을 전혀 하지 않기 때문에 저는 주로 스마트폰 연동은 인터넷 검색이에요. 
그래서 오히려 저는 제 삶을 변화시킨 핵심 제품이 무엇인가를 떠올려 보면 내비게이션 같아요. 
내비게이션 물론 지금은 내비이션도 스마트폰의 일부 기능이 됐습니다만 내비기션이 처음. 
나왔을 시점을 한번 떠올려보세요. 얼마나 심리적이 는지

참석자 1 
저도 제가 이제 부모님 모시고 어딘지 장거리 여행을 갔다. 
온 적이 있는데 돌아오는 길에 토요일이었어요토요일이었는데 아주 길도 많이 막히는 시점에 길을 잘못 듣는 바람에 고속도로로 탄 거예요. 
고속도로로 그래갖고 자 생각을 돌아 오면서 막 화가 나더라고요 이정표를 좀 호섭하게 만든 분들에게도 좀 화가 나고 또 길을 잘못하면 저 스스로에게도 좀 화가 나고 그래서 그냥 돌아와가지고 바로 데비션을 구매한 기억이 납니다.

참석자 1 
보내고 나니까 정말 제 삶이 바뀌더라고요 여러분들 예전에 스마트폰 내비션 없던 시절에 어땠습니까 여러분들 다 기억하시죠 이거 도로 지도 하나씩 다 갖고 계셨죠. 
그렇죠 지도도 하나씩 갖고 계시고 차에도 하나씩 갖고 있었던 거 기억하실 겁니다. 
그래서 만약에 장거리 여행을 할 경우에 예를 들면 동강 낙동강 생태 공원을 가겠다. 
그러면 이제 지도를 펼쳐놓고 이제 설계를 하기 시작합니다.

참석자 1 
어떤 고속도로를 이용할 것인지 또 근처에 가서는 어떤 도로를 이용할 것인지 지도를 보면서 치밀한 경호 설계를 하죠. 
근데 지금 어때요 내비션을 딱 열고 낙동강 세팅감을 누르면 친절하게 길을 안내를 해주고 또 시간도 보여야 돼요 3시간 20분 거리도 보여주고 3시간 20분 선 될 것이다라고 친절하게 안내를 해주고 있죠

참석자 1 
여러분들 여기 보시면 사원 테이블과 구도 테이블이 있습니다. 
테이블 이 테이블이 있는데 이 테이블을 부서 번호 데트 에어로 부서 번호로 조인해서 사업명으로 정렬하는 프로그램을 한번 짜보세요. 
프로그램을 테이블일 수도 있고 이제 파이일 수도 있고 또 엑셀 시트라고 생각해도 될 것 같습니다. 
엑셀 시트
참석자 1 
엑셀 시트 그래서 여러분들 엑셀에 보면은 vba라고 프로그램 모듈이 프로그램 기능이 있죠. 
그 프로그램 기능에서 사원 시트와 부서시트를 조인을 해서 사업명으로 정렬하는 그런 프론을 짜려고 합니다. 
머릿속으로 한번 프론을 한번 개발해보세요.

참석자 1 
실제로 과거에 우리가 그렇게 개발을 하던 시절이 있었어요. 
저는 이제 오래전에 폭스플러를 사용해본 게 있었는데 폭스프로 개발할 때 실제로 그렇게 했었습니다. 
실제로 그렇게 해서 파워이라는 테이블을 딱 오픈을 하고 첫 번째 레코드를 읽어요. 
그래서 거기서 부서 번호를 확인을 하고 29일날 값을 읽고 반대쪽에 있는 부서 테이블 오픈을 하고

참석자 1 
시크라는 명령을 이용해요. 시크 시크 20 시크라 명령을 이용해서 20권 부서를 찾아요. 
그래서 20권 부서의 비메인과 로케이션 정보를 읽고 그다음에 다운데 코드로 이동을 해서 또 30이라는 값을 읽고 또 시크라 명령을 이용해서 30번 부서의 정보를 읽고 그런 식으로 하나씩 하나씩 절차적으로 진행하면서 데이터를 찾아가면서 조인을 했던

참석자 1 
기억이 있습니다. 그렇게 조인을 하고 나서 또 소프트 아이브리즘을 이용해서 사업용으로 정렬하고 이런 작업들은 늘상하기 때문에 물론 템플릿을 다 저장해 놓고 그것을 이제 계속 재활용했겠죠. 
그래서 그런 식으로 계속 우리가 원하는 개발실을 만들어내기 위해서 일일이 코딩을 하면서 그렇게 프로그램을 개발하던 시절이 있었습니다. 
그런데 지금 어때요
참석자 1 
간단하게 우리가 엘시티 하나만 딱 작성해 주게 되면 원화 대가식으로 그게 금방 순식간에 나왔죠 그죠 그러면 ski은 사세 연어다 그런 말 들어보셨어요. 
못 들어보셨죠. 그죠 사세 단어가 뭐죠 사세 연어 보통 4지 이렇게 얘기를 하는데 예전에 포지 어어 그러면은 델파이 파워빌더

참석자 1 
비주얼 베이지 그런 것들을 포지엘이라고 했었어요. 
그 이전의 언어에서 만약에 예를 들면 c 프로그램 이용을 해서 버튼 하나 만든다고 생각해보세요. 
버튼 일일이 다 코딩을 했었거든요. 토지의 언어에서는 버튼 하나 만들기 위해서 들어간 것만 딱 한 버티 만들어지고 또는 더블 클릭하면 버티 하나 만들어줘요. 
그리드를 만들어볼까요. 그린드
참석자 1 
예전에는 그리드 만들기 해서 이미 코딩을 다 했었다는 얘기죠 그런데 지금은 코지 에러에서는 드래그만 한번 나는 그냥 그림 같은 거 만들어지지 않습니까 그런 것처럼 예전에 그렇게 개발했었는데 우리가 skl도 우리가 데이터도 마찬가지로 아까 말씀드린 것처럼 그렇게 개발했었는데 지금은 우리가 원하는 집합을 이렇게 에스 분장으로 정의를 하게 되면 결결 집합이 자동으로 만들어진다는 얘기죠

참석자 1 
그래서 우리가 결별 체포를 얻기 위한 처리 절차를 직접 기술하지 않습니다. 
sk의 정의를 살펴보면 스트럭처드 콜 랭기지 구조적이라는 뜻을 담고 있어요. 
구조적인 질의 언어다 그다음에 위키피디아에서 조회를 해보면 이런 말들이 나와요 스테프 베이스다 그다음에 디클라렉티브 선언적이라는 얘기죠 stl은 구조적이고 집합적이고 선언적인 언어다

참석자 1 
내가 원하는 결과의 집합을 구조적인 지리 언어를 통해서 선언하는 언어다 그런 뜻이에요.

참석자 1 
결국 과거에 우리가 일일이 데이터를 뽑아내기 위해서 일일이 코딩하던 것을 누군가 대신 프로그램을 대신해주고 있는 것이죠. 
그것이 바로 옵티마이저예요. 옵티마이저 사용자가 에스트를 작성해서 비m메스에다가 던지면 옵티마이저가 그 에스크를 받아서 프로그램을 해주는 거예요. 
프로그램을 실행 계획이라는 것을 만들고 그 실행계획을 바탕으로 내부적으로 프로시저를 생성을 해 주는

참석자 1 
결국은 프로시점이다. 결국은 sk 자체는 선언적이고 집합적인 언어지만 결과 지코를 만들어내는 과정은 어쩔 수 없이 절차적일 수밖에 없다는 얘기죠 제가 아까 예전에 포스코에서 개발했던 그 방식으로 내부적으로 하나씩 하나씩 절차적으로 이게 읽어내가면서 하나씩 조인하면서 150을 만들어내는 그 과정은 결국 절차적이라는 얘기죠 결국 내부적으로 프로스를 만들어내고 있다라는 겁니다. 
그게 말이죠.
참석자 1 
이 옵티마이저가 대신해 주고 있는 것이죠. 
우리의 역할을 그래서 옵티마이드의 정의를 살펴보면 사용자가 원하는 작업을 가장 효율적으로 수행할 수 있는 최적의 데이터 액세스 경로 최적이라는 것은 이제 빠르다는 의미이에요. 
가장 빠른 가장 빠른 데이터 엑셀 번호를 선택해서 프로시저를 자동으로 생성해 주는 bms의 핵심 엔진이다.

참석자 1 
프로시저란 말을 제가 강조를 드리고 있습니다. 
프로시죠 여기 보시면 디시전 트리가 있죠. 
디시전 트리 그래서 이 비용 옵티마이저가 내부적으로 갖고 있는 통계 정보를 활용해서 디시전 트릿 여러 가지 경우의수를 뽑아내는 거예요. 
하나의 sp를 실행하기 위해서 가능한 모든 경우수를 다 뽑아내고 가격별로 비용을

참석자 1 
평가를 해요. 그걸 평가하고 그것을 바탕으로 가장 비용이 낮은 하나의 실행기를 선택하는 그런 엔진이라고 생각을 하시면 되겠습니다.

참석자 1 
그래서 앞서도 말씀드린 것처럼 여러분들이 옵티마이저를 이해할 때 제일 쉬운 것은 자동차 내비게이션하고 비교해 보면 제일 쉬워요. 
정말 신기하게도 싹싹 들어맞아요. 너무도 비슷한 기능을 갖고 있습니다. 
그러면 자동차 내비게이션에 보면 경로 요약이나 모의 주행을 통해서 이동 경로를 미리 확인해 주는 그런 기능이 있죠. 
또 검색 모드를 변경하거나
참석자 1 
경위를 추가함으로써 우리가 원하는 경로를 변경을 해줄 수가 있어요. 
내빌리전이 선택한 경로를 우리가 원하는 경로로 바꿀 수 있다는 얘기죠 마찬가지로 옵티마이드도 그런 기능을 갖습니다. 
보시면 여기 실행 기계라고 돼 있는데 실행 계획 이 옵티마이저가 만들어낸 프로시죠 프로시의 내용을 볼 수 있도록 기능을 제공하는 것이에요. 
실행 계획이죠. 그래서 이 실행 기계를 통해서

참석자 1 
이 sk는 내부적으로 어떤 방식으로 실행을 하려고 하는구나라는 것을 트리 구조로 논리적으로 이렇게 표현을 해 주고 있다는 얘기죠 미리 보기 기능입니다. 
미리 보기 기능이고 또 이 실행률을 보고 이 경로가 마음에 들면 그대로 실행하면 되는데 마음에 들지 않으면 다른 경로로 더 좋은 효율적인 경로를 우리가 바꿔줄 수가 있어요.

참석자 1 
그래서 그런 것이 가능하게 하는 것이 옵티마저 힌트죠 힌트를 통해서 더 나은 액센스 경도로 우리가 유도해 줄 수 있다. 
힌트를 이용하기도 하고 레시피를 공유하기도 하죠. 
레시피를 실험해서 보기도 하고요. 여기 보시면 sql 매장이 하나가 있는데 티 테이블 티 테이블에서 데트에노 10이라는 조건과 에노 이콜 1이라는 조건으로 조회를 하고 있습니다.

참석자 1 
인덱스는 2개가 있는데 데트 에어 플러스 에어 그다음에 데트에너 잡 플러스 에어 이렇게 2개의 인덱스가 있습니다. 
그러면 이 sql을 실행하는 데 있어서 크게 3가지 경로가 존재할 텐데요. 
첫 번째는 요 1번 인덱스를 하는 방법 두 번째는 이번 스 사용 방법 세 번째는

참석자 1 
인덱스를 이용하지 않고 플스팅하는 방법이 있겠죠. 
그래서 어떤 힌트도 주지 않고 옵티마저에게 딱 맡겼더니 옵티마전은 지금 1번 이네스를 선택했다고 볼 수 있습니다 시 교통에서 1번 이네스 사용하고 이렇게 하고 있구나 인덱스라는 힌트를 이용해서 이번에는

참석자 1 
강제로 이번 인덱스를 타도록 그렇게 힌트를 줬어요. 
이번 인덱스를 쓰도록 힌트를 주니까 이번 인덱스를 타는 걸 볼 수가 있고요 이번에는 풀 스캔 하도록 힌트를 줬습니다. 
풀스캔하는 힌트가 나온 걸 실기를 볼 수가 있겠죠. 
말씀드린 것처럼 세 가지 경우가 존재하는 걸 볼 수가 있고 아래 2가지 경우는 강제로 사이즈가 힌트를 줘서 유도를 한 것이고 첫 번째는 아무런 힌트를 주지 않고 옵티마이저가 스스로 선택한 실행기이 될 것입니다.

참석자 1 
그러면 이 세 가지 경우의 수요의 경로 중에서 옵티마이저가 이 첫 번째를 선택한 근거는 무엇일까요. 
어떤 근거로 무엇을 판단 기준으로 해서 첫 번째 실행교 습득을 했을까요. 
그렇죠 예술로 해보신 분도 계실 테니까 아실 텐데 코스트입니다. 
코스트 여기 보시면 여기 코스트가 돼 있죠 코스트가 이 있죠.

참석자 1 
보시는 것처럼 첫 번째 인덱스를 사용하는 실행 계획은 코스트가 2입니다. 
2번 인덱스 사용 실행 계획은 코스트가 19 프로스캐너는 실행 계획은 29에요. 
그니까 옵티마이저가 에스크를 딱 실행하는 순간에 이 첫 번째 실행계획 두 번째 실행 계획 세 번째 실행계획 모든 경유서를 다 뽑아내요 다 뽑아내고 그들에 대해서

참석자 1 
비용을 평가를 합니다. 통계 정보를 기반으로 비용을 평가하고 그중에 코스타가 가장 낮은 이 첫 번째 시행을 선택을 했던 거예요. 
그래서 옵티마이저는 모든 것을 비용을 기반으로 판단을 한다라는 사실을 기억을 하시면 되겠습니다. 
우선 비용약 예 말씀하세요. 예 포스트 20% 20% 이렇게 나오는 예 단위가

참석자 1 
이라는 수치가 무엇을 의미하는지 그 중간인 거지 않습니까 예 그거 좀 이따가 설명드릴게요 좋은 질문하셨고요 그 실행 계획을 안 보는 분들이 대다수고 보더라도 저 수치가 뭔지를 모르고 대부분 보시더라고요 2 19 29 저게 무엇을 의미하는지 결론부터 말씀드리면 예상되는 아이오콜 횟수예요. 
예상되는 아이오콜 횟수 아이오콜이 무엇인지는 이따가 제가 이제

참석자 1 
3장은 배우시게 될 텐데 예상되는 아이오 프레스트

참석자 1 
수 있는 블록수라고 생각하셔도 되는데 일치하지 않아요. 
싱글 블록 아이온 지누는 아이오 콜이랑 같을 내줄 수 있는데 멀티 블록 아이오를 하기 때문에 아이오콜리와 블록 아이오 기술은 다를 수 있습니다. 
아무튼 이거는 어려운 얘기니까 뒤에 다시 얘기하도록 하시고 이거는 아이오 클래스다 이렇게만 기억하시고 나중에 다시 말씀드리겠습니다.

참석자 1 
그래서 옵티마이저는 비용을 기반으로 sk 최적화를 수행한다라는 것이고 이 비용이라고 하는 것은 쿼리를 수행하는 데 소요되는 1량 또는 시간입니다. 
바로 뒤에서 나오네요. 질문하신 내용이 그래서 전통적인 아이오 비용 모델에서는 아이오 콜 횟수만으로 비용을 평가했습니다. 
근데 최신 옵티마이즈에서는
참석자 1 
이 아이 아이오를 시간 개념으로 표현을 해요. 
시간 개념 그래서 아까 제가 이제 이 아이오 코레스를 말씀드렸는데 과거에는 아이 프레스였고 지금은 싱글 블라 가요에 대한 어떤 상대적인 무슨 얘기냐면 이 이라는 얘기는 뭐냐면 우리 시스템에서 두 번의 싱글 돌라가예요 하는 점도 시간

참석자 1 
시스템마다 싱글 블라 가이어가 시간이 다 다르거든요. 
싱글 블라 가이어가 빠른 시스템이 있고 느린 시스템도 있어요. 
이 시프라는 값은 우리 시스템에서 19번 싱글 블라가요 하는 정도의 시간을 의미하는 거예요. 
이것이 19초 2초 19초 이런 게 아니라는 거죠.

참석자 1 
절대적인 시간이 아니고 상대적인 개념으로 시간을 청구한 겁니다. 
우리 시스템에서 19번 싱글 블라가이로 하는 정도의 시간을 표현하고 있다라는 거죠.

참석자 1 
근데 뒤에서 드릴 말씀인데 마침 질문이 들어오셨기 때문에 제가 미리 말씀 드리는 거고요 뒤에서 다시 한 번 얘기가 나오니다. 
그래서 과거에는 아이오 콜 수였다. 최근에는 방금 말씀드린 것처럼 시간 개념으로 시간 개념으로 상대적인 시간 개념으로 환산한 값이다. 
이렇게 말씀드리면 될 것 같습니다.
참석자 1 
그리고 이런 비용을 개선하기 위해서 내부적으로 다양한 통계 정보들을 활용합니다. 
통계 정보에는 테이블 통계도 있고 클럽 통계도 있고 인덱스 통계도 있어요. 
테이블 통계로는 인덱스 레코드 개수 블록 개수 또 평균 행 길이 등이 있고 컬럼 통계로는 컬럼 박세수 박세수 뭘까요. 
박세수가 그러면 성별 또 각지 수가 몇 개예요. 
두 개죠 그죠 근데 고객 테이블의 고객 번호는 몇이에요. 
고객이 10만이다.
참석자 1 
10만이 되겠죠. 그죠 잡을수록 그래서 우리가 이것을 우리가 이제 엔디이라고 보통 이제 얘기를 많이 하는 밴디디 밴디기 이거 외워두세요. 
굉장히 중요한 통계 정도입니다. 넘버 로봇 디지핑크 밸류 넘버 로브 디스팅트 밸류 인입간 가스 정리 개수를 의미하는 거죠.

참석자 1 
한 가지 이거 굉장히 중요한 개념이고 앞으로 자주 나올 겁니다. 
엔티비 꼭 기억하세요. 통계 정보 중에 제일 중요한 가치예요. 
이게 레코드 개수와 더불어서 팬들이
참석자 1 
예를 들면 방금도 제가 성별 얘기를 했는데 고객이 10만 명입니다. 
근데 성별이 2개죠 그러면 성별로 이콜 드렸을 때 몇 번 나오겠어요. 
고객이 10만 명이면 5만 나오죠 그죠 그 계산을 가능하게 하는 것이 엔드이지 않습니까 그죠 값이 두 개니까 값이 두 개니까 2분의 2라는 얘기죠 선택 보가 선택가 2분의 1

참석자 1 
엔진이라는 것이 예를 들면 엔진과 2예요. 
그러면 선택도 선택도는 2분의 1이거든요. 
그죠 데이터 선택되는 비중 그럼 여기다 레코드 개수를 곱하면 그 조건들에 해당하는 레코드 개수가 나오는 거예요. 
레코드 개수 그 레코드 개수가 칼리나레티죠 칼리나 레티

참석자 1 
죄송해요. 안 보이 제가 다음 주에는 아이패를 준비해 볼게요 아이패드에다 이렇게 어서 지금 방향이 넓다. 
보니까 안 보이시는데 그래서 mdb 선택도 할인해서 이렇게 뒤에 또 기능이 있으니까 지금 메모 안 하셔도 또 다른 같이 나오고 결국 이 칼리메를 구해서 그 조건들을 만족한 레코드 개수를 구하게 되는데 그것을 구하기 위해서 300도가 필요한 것이고 선택도를

참석자 1 
구하기 위해서 필요한 게 nd이죠. 그렇죠 제일 중요한 통계 정보일 수밖에 없는 거예요.

참석자 1 
그다음에 칼럼 각세수 칼럼 갑 분포 또 이런 mdb를 이용하기도 하지만 또 컬럼 분포를 또 믿고 구해놓기도 해요. 
남자 예를 들면 일반적으로 남자 50% 여자 50%지만 어떤 경우에는 남자 10% 여자 90%일 수도 있지 않습니까 그런 것들을 시트 레인이라고 그래서 그런 경우는 또 값을 또 따로 또 소매 정보를 갖고 있습니다. 
그래 이제 칼라 값 분포가 되는 것이죠.

참석자 1 
어떨 때는 mdb를 활용하기도 하고 칼라가 분포 즉 시트을 활용하기도 합니다. 
또 인덱스에 대한 통계 정보들 인덱스 높이 플라스틱 이런 것들을 활용합니다. 
최근에는 하드웨어적인 특성을 반영해서 시스템 통계도 활용합니다. 
우리 시스템의 cp 속도 디스크 아이오 속도

참석자 1 
시스템마다 속도가 다 다르죠 그죠 시트 색도 다르고 싱글 블록 알고 또 멀티 블록 또 다 다르니까 그런 것들도 활용을 한다라는 얘기 여러분들 내비게이션이랑 비교를 해 보면 내비게이션에도 보면 gps 위치 정보 지도 주소 정보 도로 정보 통행 요금이라든지 평균 제한 속도 최근에는 실시간 교통 정보도 활용하지 않습니까 마찬가지입니다.

참석자 1 
내비게이션 이런 정보들을 활용해서 가장 가까운 길을 찾아주는 것처럼 옵티마이저도 이런 통계 정보들을 활용을 해서 활용을 해서 가장 빠른 실행 정보를 찾아야 된다라는 얘기입니다. 
그럼 이 통계 정보는 누가 수집할까요. 
통계 정보는
참석자 1 
그러면 누가 수 있다. 그 관리자가 그렇죠 그 관리자는 바로 dba죠 그죠 dba dba가 수집합니다. 
여러분들이 개발자분들이 퇴근하고 잠을 잘 쓰는 동안에 db 분들은 밤새 통계정을 수집하고 계시는 거예요. 
물론 잡을 걸어놓고 가시겠죠. 잡을 걸어놓고 가면

참석자 1 
밤에 딱 정해진 시간에 한 번 도만 쫙 수집이 되는 거예요. 
매일 수입하기도 하고 또 일주일에 한 번씩 하기도 하고 한 달에 한 번씩 하기도 하고

참석자 1 
요즘에는 또 또 자동 수집하는 기능들이 또 활성화되고 있어서 노라클은 기본적으로 대형 시스템이라서 자동 수집을 별로 선호하지 않고 기본 세팅은 아닌데 ms 시퀄 서버라든지 좀 중소형 기계를 타깃으로 한 기기들은 또 자동 수집을 하기도 해요. 
실시간으로 수집하기도 하고
참석자 1 
하지만 기본적으로는 기본적인 수진 역할은 dba 분들에게 있다는 것은 좀 아시면 될 것 같습니다. 
그래서 우리가 최근에 사용하는 옵티마이저는 말씀드린 것처럼 비용 기반으로 작동하는 비용 기반 옵티마이저인데 과거에는 규칙 기반 옵티마저가 있었습니다. 
여러분들 더 이상 규칙에만 넣지 말자는 공부하실 필요가 없어요. 
하지만
참석자 1 
지금의 비용성 없지만 제가 왜 좋은지를 이해하는 데 도움을 드리기 위해서 제가 비용 없기만 잠깐 설명을 좀 드리도록 하겠습니다. 
규칙 위반 어떻게 하냐면 이렇게 엑스 경로별로 순위를 정해놨어요. 
말하자면 맨 밑에 보면 풀스캔이죠. 풀스캔은 순위가 제일 낮아요. 
15입니다.
참석자 1 
그다음에 맨 위쪽에 보면 싱글 로우 바이 로아이디 로아이디로 한 레코드를 엑스 사람의 순위가 가장 높아요. 
이런 식으로 오퍼레이션 별로 오퍼레이션 별로 순위를 정했어요. 
그래서 이 순위를 기반으로 실행 계획을 결정하는 겁니다. 
그래서 방금 보신 순위라고 하는 것이
참석자 1 
중소형 비교에서 몇 천 건 몇만 건 단위의 또는 몇십만 건 단위의 중소형 비교에서는 어느 정도 보편 타당성을 가져요. 
당연하게도 투식캔보다는 인덱스 스킨이 더 빠를 것이니까 그죠 그런데 과거에는 데이터가 많지 않을 때는 어느 정도 보면 보편 선업을 가졌는데 실점

참석자 1 
초대형화 되는 환경에서는 더 이상 쓸 수 없는 오티마저 되어버렸습니다. 
제가 단적 예를 세 가지만 보여드리면 고객 테이블에서 고객 유형 코드가 cc 01 2 3 코드 코드는 변별력이 좋아요. 
안 좋아요. 되게 안 좋거든요. 그죠 성별 대표적인 게 성별인 것처럼 코드들은 되게 가지 종류가 몇 개 안 돼 있기 때문에 변별력이 좋지 않습니다. 
즉 인덱스를 활용한 것이
참석자 1 
도움이 안 될 가능성이 더 높다는 얘기예요. 
근데 지금 보시면 고객 유형 코드로 조회하고 있죠 고객 유형 코드가 한 4개밖에 안 되는데 오티마자는 알비오는 규칙기만 없지만 얘를 무조건 있는 색 합니다. 
왜냐하면 풀 스키는 15일인데 인덱스는 훨씬 더 높거든요. 
순위가 순위가 그죠 순위가 높기 때문에 이 고객 운행 코드에 인덱스가 있으면 무조건 인덱스를 타야

참석자 1 
그런데 고객이 1천만 명이거든요. 1천만 명인데 고객 유형과가 4개예요. 
그러면 평균적으로 250만 건 이렇게 되겠죠. 
그죠 250만 건 인덱스를 태우는 순간 성능은 훨씬 더 느려져요. 
솔스템보다 뒤에서 배울 수 있지만 인덱스는 손익 분기점이 있거든요. 
일정량을 넘어서는 순간 오히려 더 플스트보다 느려지는 그 순간이 존재하는데

참석자 1 
수입 구점을 넘어서는 구간에서도 알면은 무조건 인덱스를 탄다는 얘기잖아 규칙으로 작동하기 때문에 그다음에 고객 대부를 고객명으로 정렬합니다. 
정렬을 해요. 그러면 인덱스를 태우면은 인덱스는 정렬이 돼 있기 때문에 인덱스를 타는 순간 자동으로 정렬된 결과 집합이 나오게끔 돼 있어요. 
그죠 인덱스 정렬돼 있으니까 에디스를 태우면은 그 적용된 순서대로 쭉 나오게 돼 있거든요.

참석자 1 
그래서 알피는 오토바이 고객명 그러면 고객 명의의 인덱스가 있으면 그 인덱스를 타는 순간 따로 정렬을 안 해도 되죠. 
그죠 인덱스를 피우면 그냥 기본 정렬이 돼서 나오니까 별도로 정렬 작업을 안 해도 되니까 인덱스를 탄다는 얘기죠 근데 만약에 고객 테이이 천만 명이다. 
1만 명인데 만약에 얘를 인디스트하게 되면 난리 납니다. 
진짜 나중에 저희가 소프트 팅 할 때 다시 한 번 설명드릴 텐데

참석자 1 
전체 천만 명을 다 인덱스를 태워갖고 인덱스를 타면서 한 칸씩 한 칸씩 테이블 찾아가면서 천만 개의 레코드를 레피스하게 되는 거거든요. 
고객 때문에 천만 명이면 물론 나중에 될 수 있습니다만 부흥 검이 처리가 가능한 상황에서는 얘가 도움이 될 수 있지만 그렇지 않은 상황에서 굉장히 큰 성의적인 오버들을 유발시킬 수 있다는 얘기죠 그럴 수밖에 없는 게 보면 무엇이냐면 풀스캔보다

참석자 1 
그죠 푸스킨보다 오도바이 인디스 칼럼이라 오도바이가 수능이 하나도 없거든요. 
만약에 얘를 풀 스캔했으면 풀 스캔을 하고 나서 따로 정렬 작업을 할 수가 있겠는데 인대스테 되면 바로 정렬돼서 나오니까 근데 그게 인디스트 순위가 14이고 투스캔하는 순위가 15이니까 무조건 14위에 해당하는 얘를 선택을 하는 거예요.

참석자 1 
천만 권을 정렬하는 천만 권 인덱을 필요 없는 그런 문제가 생긴다는 다 마지막으로 연령 20보다 크다는 조건과 연봉이 3천과 6천 사이에 있다는 조건으로 조회를 합니다. 
그럼 여러분이 하면 인덱스가 연령에도 있고 연봉에도 있어요. 
그럼 어떤 인덱스 할까요.
참석자 1 
어떤 형수가 유리하겠어요. 연령 연령이 유리하겠죠. 
그렇죠 연령 왜냐면 연령이 60보다 큰 사원은 2%밖에 안 되고 연봉이 3천과 2초 사이는 사원은 80%가 되거든요. 
그러면 이쪽이 변별이 훨씬 좋지 않습니까 그러면 당연히 연령 조건을 사용하는 것이 좋다라는 얘기예요. 
훨씬 더 변별력이 좋기 때문에 그래서 cbo는

참석자 1 
cbo 비염 기반 옵티마이저는 그런 데이터 분포를 이용을 해서 연령 조건을 사용합니다. 
요 연령 유비스를 사용을 해요. 근데 알비오는 데이터 부폰을 활용을 못한다 그랬죠 그런 정보를 아예 갖고 있지 않아요. 
그러다 보니까 뭘 사용하냐면 비틴 조건을 사용해요. 
비틴 조건은 여행 조건은 열린 조건이죠. 
60보다 크다
참석자 1 
열린 조건 bta는 다친 조건이에요. 
어디서부터 어디까지 한 범위가 한정돼 있죠 그러면 일반적으로 어느 쪽이 더 변별이 좋을까요. 
다친 조건이겠죠. 그렇죠 비팅 조건이니까 예 여기 보시면 10번이 바운디드 레인지 다친 조건이라는 얘기예요. 
11위는 엄마 피드 레이즈 그죠 범위가 열려 있다는 얘기죠 그니까 순위상 비트 조건이 더 순위가 높아요.

참석자 1 
그죠 그러니까 실제 데이터가 어떤 게 더 정보가 좋냐를 따져보지 않고 비팅과 구동으로 조회를 해서 무조건 비팅을 선택을 한다는 얘기죠 실제 데이터 공부하고 무관하게 실제로는 연령 조건이 훨씬 좋은 조건임에도 불구하고 연봉 조건을 이용해서 연봉 인지수를 태우는 거죠. 
그러면 전체 데이터 80%가 이 조건 만족하는데 인디를 인덱스가 80%의 데이터에 읽고 그 80%의 데이터를 테이블 에테스 하면서 굉장히 심한 부활을 유발할 수밖에 없다는 얘기죠

참석자 1 
그래서 보시는 것처럼 알피 규칙기만 어트하자는 변경 처리에 아주 한계점을 분명하게 드러냅니다. 
더 이상 쓸 수 있는 옵티마이저가 아니에요. 
근데 제가 왜 이런 말씀드리냐면 아직도 db 분들 중에 cbo는 너무 불안하다 cbo는 통계 정보를 기반으로 하기 때문에 실행 계획이 막 바뀔 수가 있어요. 
어제 이을 타는 놈이 풀로 바뀔 수도 있고

참석자 1 
어제 일본 인디스타는 놈이 이번 인디에서 바뀌기도 하고 그것 때문에 장애가 종종 나거든요. 
통계 정보가 바뀌고 데이터 양이 바뀌으로 인해서 쉬는 게 바뀌고 그래서 이제 장애가 나고 그래서 디비분들이 늘 그런 장애를 겪다 보니까 불안해서 시비어는 못 쓰겠다. 
나는 rpo로 가야 되겠다. 그러면서 통계 정보 수집을 안 하는 거예요. 
통계 정보 수집을 안 해요.
참석자 1 
근데 아이디어는 더 이상 쓰면 안 되는 옵티마이저입니다. 
지금 보시는 것처럼 그리고 통계 정보 수집 안 한다고 해서 아이디어로 가는 것도 아니에요. 
통계 정보 수집 안 하면 아이디어로 가겠지 이건 착각입니다. 
통계적 수집 안 하더라도 내부적으로 동쪽 샘플링을 한다든지

참석자 1 
어떤 공식들을 이용을 해서 결코 시리오 모드로 작동을 해요. 
그러니까 저 더 이상 그런 실수를 안 하셨으면 좋겠어요. 
제가 실제로 그런 db 분들을 많이 만났기 때문에 이런 말씀을 드리는 거예요. 
통계 정보는 무조건 수집하셔야 되고 잘 수집해서 잘 활용하는 쪽으로 집중하셔야 된다 그래서 규칙 기반 옵티마제의 원리를 통해서 알디 ceo가 즉 비용반 옵티마제가 왜 꼭 필요한지에 대해서 간단히 좀 깊게 설명을 해드렸습니다.

참석자 1 
옵티마이저와 행동에 영향을 미치는 요소들이 많이 있습니다. 
스킬 연산자 형태 이런 것들 제약 설정 옵티마 제이트가 아주 강력하죠. 
그죠 제이트는 명령화입니다. 명령 명령하기 때문에 아주 강력하고 또 그게 묻지 않게 쉬운 게 통계 정보 지금까지 말씀드린 것처럼 옵티마즈 통계 정보를 바탕으로 판단하기 때문에 가장 큰 영향을 주는 요소 중에 하나고 또 옵티마 관련 파라미터들이 있어요. 
디엠에스 종류도 그렇죠 디 똑같은 에스케이라고 해서 항상 같이 시행되는 게 아니에요.

참석자 1 
똑같은 skl이라고 하더라도 ms시콜 서버의 실행력이 다르고 오라클의 실행이 다르고 마스크의 실행력이 다릅니다. 
엔진이 다르기 때문에 당연히 똑같은 데이터 분포의 똑같은 sk라고 하더라도 다른 판단을 할 하게 된다라는 얘기죠 보지 마자 다르니까 여러분들도 한번 생각해 보세요. 
여러분들 자동차에 내비게이션이 매장돼 있지 않습니까 그죠

참석자 1 
근데 그 내장 내비게이션을 켜놓고 또 스마트폰 내비게이션도 같이 켜고 다니지 않으세요. 
저는 보통 두 개를 같이 켜고 다니는데 그 2개를 같이 캐고 다니다 보면 어떤 현상을 발견할 수 있냐면 똑같은 오피스로 가는데 수시로 서로 다른 경로를 가리켜요 그죠 그러면 둘 중에 하나는 틀린 거예요. 
그죠 그죠 둘 중에 하나는 잘못된 거예요.

참석자 1 
절대 완벽하지 않습니다. 내비게이션이 마찬가지로 옵티마이도 완벽하지 않아요. 
그래서 옵티마이저에 따라서 내비게이션에 따라서 다른 경로를 안내하는 것처럼 옵티마이저에 따라서 서로 다른 길을 선택 하는 건 너무나도 자연스러운 현상이고 그 이유는 옵티마이저가 완벽하지 않기 때문에 그런 거예요.

참석자 1 
완벽하지 않기 때문에 하는 것이고 그러나 완벽하지 않은 부분들을 우리 개발자분들이 또는 저 같은 팀이라는 분들이 좋은 경로를 선택을 해주시면 되는 것이죠. 
그것이 곧 트윙인 것이고 그래서 그 트윙을 위해서 우리가 힌트를 사용을 합니다. 
힌트를 퓨트 사용법을 간단히 이렇게 말씀을 드릴 건데 퓨트 사용법은 너무 간단해요. 
여러분들 주석 주석 있지 않습니까 주석

참석자 1 
주석이 이렇게 돼 있죠 그냥 오라클 주석이 그 슬래시 슬래시 하고 양쪽에다가 이렇게 라스타를 하면 주석했는데 거기다가 요 플러스 기만 딱 붙이시면 돼요 플러스 디오 붙이시고 이 안에다가 힌트를 쓰시는 거예요. 
그래서 힌트 쓰는 거는 어렵지가 않습니다. 
몇 가지 주의해야 될 점들 여기 나열한 것들 한번 보시고 이제 설명드리지 않을 텐데 여러분 몇 가지만 주의하시면 힌트 삶은 전혀 어려울 게 없습니다.

참석자 1 
어려운 거는 이 힌트에 각각의 의미를 이해하는 게 어려운 것이죠. 
그죠 그래서 이런 의미에 대해서는 여러분들이 오늘 이후로 교육 받으면서 하나하나 알아가시게 될 텐데 핑키 성

참석자 1 
그런데 그 위에 보면은
참석자 1 
브리텔라 에스트 힌트라는 뷰가 있어요. 
그럼 현재 우리 버전에서 지정되는 힌트의 목록이 나옵니다.

참석자 1 
참고로 말씀드리는 거예요. 힌트에 목맥이 쭉 나오고 이 힌트가 몇 과 전부터 지연이 됐었는지 모두 확인할 수 있고요 그러면 한 카운트를 한번 해볼게요 제가 지금 접속한 db가

참석자 1 
접속한 뒤가 어렵 트구시인데 트구씨 기준으로

참석자 1 
359개 352개가 되는 라인트를 제공합니다. 
이처럼 오라클은 굉장히 마인트를 제공을 해요. 
다른 집이랑 비교가 안 되죠 그렇죠 다른 db는 보통 10개 미만 또는 만화 열 몇 개 정도 제공하는데 뭐라든 트부c 기준으로 350개나 되는 많은 히트를 제공합니다. 
저 많은 득을 다 알 필요도 없고 다 알 수도 없어요. 
저 같이 티늄만 전문으로
참석자 1 
10년 이상 한 사람도 15년 20년 가까이 한 사람도 조직들 목록을 다 알 필요도 없고 알 수도 없습니다. 
그래서 제가 여기 나열해 드린 힌트들 새 보면 한 2 3 찍게 될 겁니다. 
그죠 한 2~30개 정도 실패만 알면 웬만한 팀은 다 할 수 있어요. 
웬만한 팀은 다 할 수 있고 이 중에 대부분은 아마 이번 할 수업 과정 중에 대부분 다 설명드릴 거니까 그 정도만 아시면 웬만치면 다 된다라는 거고요

참석자 1 
마지막으로 강조드리고 싶은 것은 옵티마 렌트는 명령어예요. 
명령어 어떤 분들은 이 옵티마이트를 그냥 옵션이라고 생각하시는 분 들이 있어요. 
옵티마이저가 그렇게 할 수도 있고 그렇게 하지 않을 수도 있는 옵션 정도로 생각하시는 분들이 있는데 그것은 명령입니다. 
명령
참석자 1 
또 어떤 분들이 이렇게 얘기하세요. 옵티마이저가 자기가 생각하는 최적의 경로랑 사용자가 지정한 힌트 두 개를 비교해서 예 어선세요. 
비교해서 더 나은 걸 선택한다 이렇게 얘기하시는 분들이 계셨거든요. 
실제로 이게 말이 안 되는 게 보세요. 
옵티마이저가 30경기 요 경로예요. 그렇죠 아까 보신 것처럼

참석자 1 
그다음에 이거는 사용자가 힌트를 지정한 거예요. 
지정한 거예요. 근데 옵티마이저가 사용자 힌트를 고려해서 자기가 생각한 것과 사용자가 정한 것을 비교해서 그중에 좋은 걸 선택한다 그럼 자기 얘가 선택될 거 아니에요. 
그렇죠 얘는 코스트가 2고 세양자가 지정한 트는 19예요. 
그죠
참석자 1 
그러면 둘을 비교해서 선택하게 되면 당 이름을 선택할 거 아닙니까 그럼 힌트라는 것은 애초에 무용지물이 돼버리는 거죠. 
그죠 그죠
참석자 1 
근데 그것을 잘못 알고 그렇게 이해하시는 분들이 계신 이유는 힌트가 잘 안 먹는 경우가 있기 때문에 그래요 힌트가 하는 힌트가 안 먹는다 그러면 이제 그걸 보면서 티마이저가 힌트를 무조건 사용하는 게 아니고 또 내부적으로 또 한번 판단을 더 하나 보다 이렇게 생각하시는 거죠. 
근데 다시 말씀드리지만 힌트는 명령어입니다. 
무조건 따라야 되는 명령어인데 힌트가 잘 먹지 않는 이유는 몇 가지가 있습니다. 
첫 번째는
참석자 1 
어법적으로 맞지 않게 힘태를 비슷한 거예요. 
여기 보시면 이렇게 중요한 문법이 몇 가지가 있지 않습니까 규칙을 위반한 거죠. 
규칙을 이만한 거예요. 제일 대표적인 게 여기 보시면 요것도 꼭 기억하셨으면 좋겠어요. 
우리가 emp에다가 엘리어스를 줬어요. 
그죠 emp에도 엘리어스를 줬으면은 힌트에도 엘리엇을 쓰셔야 돼요

참석자 2 
그래
참석자 1 
보시는 것처럼 엘리을 줬는데 힌트에는 이행태라고 주장했어요. 
힌트 안 먹습니다. 이거 아주 가장 많이 하는 실수예요. 
꼭 지켜주시면 좋을 것 같고요 스쿼점 이 이런 식으로 스킨 하면 명시하시면 안 돼요 이거 무효됩니다. 
이렇게 이런 어법에 안 맞게끔 이들을 기술했기 때문에 이제 그럴 수 있다라는 거고 두 번째는 잘못된 참조를 사용하는 거죠. 
잘못된 참조 없는 테이블
참석자 1 
또 없는 별칭을 사용하나 또는 없는 인덱스를 지정하거나 그랬을 때 무시가 되는 것이고 또 논리적으로 불가능한 에센스 경로 힌트를 주긴 줬는데 그 힌트가 논리적으로 가능하지 않은 경우가 있다라는 얘기입니다. 
예를 들면 여러분들 이제 나중에 해시 조인을 배우실 텐데 해시 조인은 조인 조건이 이퀄이어야 돼요 이콜 이퀄일 때만 작동하는데 우리가 보통 조연은 이퀄로 하지만 가끔 부두거나 비트윈으로 변할 때도 있거든요.

참석자 1 
고등어나 비티드 조용 해놓고는 거기다 해시계을 막 주는 거죠. 
해시게 그도 안 먹습니다.
참석자 1 
또는 emp 테이블에서 전체 버스를 세는데 전체 거스를 세는데 인덱스를 태우도록 했어요. 
인덱스를 이용해서 버스를 세라 이거죠. 
근데 이 인덱스가 널 한 칼럼에 대한 인덱스였어요. 
널 한 칼럼 오라클은 널 칼럼은 인덱스에 담지 않거든요. 
그렇기 때문에 널 한 칼럼에 대해서 생성한 인덱스로 카운트를 하게 되면 널 값들이 누락이 되겠죠. 
그죠
참석자 1 
테이블에는 100만 건 있는데 그중에 10만 건이 너는 칼럼이에요. 
여기 이네임 인덱스지 않습니까 이네임 인덱스 네임 이네임 컬이 너는 칼럼이라는 얘기예요. 
100만 명의 고객이 있는데 그중에 예를 들면 2명이 이네임이 없어요. 
그러면 이네 인덱스로 카운트를 세게 되면 두 명이 누락된다라는 얘기죠 널 허용 컬러 인덱스에 저장이 안 되기 때문에

참석자 1 
이기스를 쓰라고 했는데 이 비스 쓰게 되면 결과가 집합이 안 맞게 되지 않습니까 이기스를 쓸 수 없는 상황인 거예요. 
이럴 때 무시가 된다는 그 제가 힌트를 무시한다 타박하지 마시고 이유를 잘 따라 잡으시면 다 그만한 이유가 있습니다. 
네 번째로는 의무적으로 맞지 않게 키트를 기술하는 경우 우리가 나중에 마지막 날 배우실 텐데 언네스트와 푸시 서브 킨트는 같이 쓰셔야 돼요 항상

참석자 1 
같이 쓰셔야 돼요 푸시 서부 퀸트를 써버렸는데 이 실행 계획이 언니스트 돼버리면 서브크가 풀려버린다는 얘기예요. 
풀려버리게 되면 이 푸시 서브 키드는 작동할 수가 없거든요. 
그래서 나중에 매시게 될 거니까 의미적으로 맞지 않게 그렇게 기술한 경우 또는 옵티마이저에 의해서 내부적으로 커리가 변환된 경우예요. 
사용자는 인라인드를 썼는데 인라인드가 풀려서 일반 드으로 바뀌어버리는 거죠.

참석자 1 
서브 커리를 썼는데 서브 커리가 풀려서 일반 주인이 바뀌어버리고 옵티마가 쿼리를 변환을 하거든요. 
그런 변환된 커리에다가 힌트를 주거나 하면은 힌트를 가 잘 안 먹는 경우가 있습니다. 
그래서 이 원리는 여러분 나중에 커리 변화를 좀 따로 공부하시고 나면 좀 이해가 되시려니까 지금은 그냥 가볍게 저런 게 있구나 하고 넘어가시면 될 것 같습니다.

참석자 1 
마지막으로 버그 버그 하나는 모든 게 다 설명이 돼요. 
그죠 버그 버그 때문에 혜택 안 막가 종류가 있기는 합니다. 
어쨌든 이러한 이유로 인해서 히트가 무시되는 경우가 있긴 하지만 제가 다시 강조드리고 싶은 것은 명령어다 다 이런 경우에 해당하지 않으면 무조건 텐트는 중한다라고 이해를 하셔야 될 것 같습니다.

참석자 1 
질문 있으시면 질문 답변 하면 쉬겠습니다. 
질문 있으세요. 질문 없으세요. 뒤에 말씀하세요. 
보라크의 이제 핸 사용을 안 하는 게 그게 가장 효율적이라고 보니 아직도 사용할

참석자 3 
사용하시고 다른 지시 들
참석자 1 
힌트를 현실적으로 사용 안 할 수가 없습니다. 
제가 아까 말씀 것처럼 옵티마이는 절대 완벽할 수 없어요. 
많은 실수들을 합니다. 그런 상황에서 없지 마저 잘못 선택했을 때 그냥 느리면 느린 대로 쓸 것이냐 그럴 수 없잖아요. 
그죠 튜닝을 해야 되겠죠. 트닝하는 과정에서 허리를 변호해서 빠르게 하는 것도 있지만 대부분의 경우는 힌트를 이용을 해서 빠르게 트윙을 합니다.

참석자 1 
그래서 오라클이 다른 dbms에 비해서 옵티마이즈 lg이 더 발달해서 발달해서 더 좋은 시행을 많이 만들어낸 건 사실이지만 그렇지 않은 경우도 많이 있어요. 
많이 있기 때문에 니트는 안 쓸 수가 없다라는 거죠. 
그러니까 정책적으로 정신적으로 그 시스템마다 다 달라요 시스템의 어떤 민감도에 따라서

참석자 1 
이 사람마다 다 생각이 다르고 또 시스템마다 달라요 이제 제 생각을 말씀드리면 많은 사람들이 어떻게 얘기하냐면 힌트는 쓰지 않는 게 좋다라고 얘기를 해요. 
웃지마에게 맡겨라 근데 이게 현실적으로 불가능하거든요. 
밖에 없는데 제대로 안 넣으면 느리는 대로 쓰라는 얘기밖에 안 되지 않습니까

참석자 1 
저는 이제 어떤 생각을 갖고 있냐면 민감하지 않은 시스템 미션 크리틱하지 않은 시스템에서는 그것도 좋은 방법이라고 생각해요. 
약간 늘어져도 큰 문제가 없다. 그런 시스템들은 그냥 없으면 맡기는 것도 좋은 정책인데 오라클은 대부분 아주 대형 시스템을 그게 많이 써요. 
스케이 텔레콤이라든지 은행들 대부분 오라클을 쓰고 있고요

참석자 1 
증권사들 대부분 다 오라클 쓰고 있고요 대부분이 아니고 다 오라클 쓰고 있습니다. 
증권사에서 만약에 통계 정보가 어제랑 오늘 달라져서 갑자기 시장이 확 바뀌었습니다. 
그래서 어제까지 주문 체결이 잘 됐듯 싶더니 갑자기 주문 체결이 안 돼요 어떻게 될까요. 
이건 그냥 장애 나서 장애 보고 쓰는 수준이 아니고 이건 소송으로 이어져요 소송으로

참석자 1 
내가 오늘 1억 원 어치 주문을 했어야 되는데 시스템이 문제가 돼서 체결이 안 됐습니다. 
이건 그냥 소송이거든요 소송으로 가거든요. 
그랬을 때에서는 힌트를 아주 타이트하게 박아야 돼요 통계정보고 나들고 어제랑 오늘 달랐다. 
그래서 어제까지 이렇게 서 1번 타는 놈이 오늘 2번 타고 내일 한번 또 이거 있어 절대 안 되거든요. 
힌트를 타이트하게 박아가지고 절대 바뀌지 않도록 세팅을 딱 해주셔야 됩니다.

참석자 1 
그렇다고 모든 회식들을 다 그렇게 할 수는 없죠. 
그렇죠 그래서 저는 어떻게 얘기를 하냐면 미션 크리티컬 업무 지금 방금 증권사를 말씀드렸으니까 증권사로 얘기하는 주문과 체결과 관련된 업무 다른 거는 혹시 장애가 나더라도 큰 문제가 없을 수 있는데 적어도 주문 체계와 관련된 애들은 절대 실행기에 바뀌지 않도록 타이트하게 힌트를 박아주셔야 된다는 얘기죠 실행기 바뀌어서 문제 생긴 건 누가 책임질 거예요.

참석자 1 
핀트를 타이하게 주셔야죠 그래서 그런 대상들은 전체 어플릭션의 에스피가 한 2만 개쯤 된다고 하면 상위 한 2% 미만이에요. 
정말 미션 크리틱한 서비스들 걔들에 대해서는 힌트를 정확히 주셔야 된다는 거죠. 
나머지들은 옥천 환자에게 자율적으로 맡기고 운영하다가 문제될 때 이렇게 간헐적으로 힌트를 주면 되는 거죠. 
그래서 이건 시스템마다 다 다른 거라서 하나의 정답으로 말씀드릴 수 있는 건 아니에요. 
적어도 제가 지금 말씀드린 어떤 그런 미션 크리티컬한 어떤 시스템들에 있어서는

참석자 1 
힌트를 트리트게 기술해 줘야 된다라는 거죠. 
그래서 힌트를 기술하는 방법도 있고 최근에는 또 여러 가지 힌트를 내장하게끔 하는 그런 또 좋은 기능들도 있어요. 
스크림이라고 들어보셨는지 모르겠는데 오라클 기준으로 이런 기능들을 이용을 해서 힌트를 이렇게 에스켈에서 직접 기술하지 않고 스켈에다가

참석자 1 
별도의 방법으로 이렇게 하는 그런 그 기능도 있긴 합니다. 
네 이런 거 참고하시고 어떤 재밌을까요. 
또 다른 질문 있으신 분 원래 옵티마이저가 실행 계획에 의해서 조회를 하고 있어

참석자 4 
이터가 많아짐에 따라서 시는 게
참석자 1 
그렇죠 그렇죠 오늘은 데이터가 천 번밖에 없어서 1천 권 정도는 인격을 안 하면 출시균으로 해버리는 거예요. 
그런데 오늘 새벽에 벨트가 천만 건이 들어왔습니다. 
그러면 푸스캔 하게 되면 문제가 생길 수 있겠죠. 
그렇죠 그럼 그때 이기스 칸 속으로 바뀌어버릴 수 있다는 얘기죠

참석자 1 
그리고 예를 들면 오늘 천 건이었는데 오늘 밤에 새벽에 천목경이 들어왔어요. 
천목에 들어왔어도 평균 정보를 수집 안 하면 옵티마이는 그 사실을 몰라요 천만 권이 들어왔다는 사실을 그러면 여전히 풀스캔으로 가는 거예요. 
근데 천만 건이 들어왔고 천만 건이 들어온 이후에 소비자 보험을 수집을 했어요. 
그러면 천만 건을 인식하고 그다음 날부터 인덱스를 타게 된다는 얘기죠

참석자 1 
그래서 통계 정보 운영 정책을 잘 세우셔야 돼요 데이터가 들어오고 나서 통계 정보 수집할 것이냐 그러면 보통 배치 프럼이 새벽에 돌죠. 
그죠 통계 정보도 새벽에 돌아요. 두 개가 맞물려서 어떤 게 먼저 실행하느냐에 따라서 새로 선방권이 들어온 것을 통계 정보로 인식을 할 수도 있고 못할 수도 있습니다. 
그 시스템이 장애가 주로 나는 사람이 바로 그런 거예요.

참석자 1 
조 여러분들 여기 계신 분 중에 db 분들 계시면 그거 잘 생각하셔야 됩니다. 
참조 정보를 수집할 때 그 수입 시점을 언제로 할 것이냐 잘 결정하셔야 됩니다. 
그걸 잘못 결정하시게 되면 천만 권이 들어왔어도 몰라요 기마 자가 그다음 날이 돼서야 그걸 인식하게 되는 거죠. 
그걸로 해서 장애가 나는 그래서 옵티마이저는 실제 건수를 보는 게 아니에요. 
철저하게 통계 정보만 보고 판단을 합니다. 
통계 정보만 보고
참석자 1 
통계 정보 관리는 굉장히 중요한 것이고 db의 분들은 거기에 집중하셔야 돼요 아까처럼 말씀드린 것처럼 ceo 비 옵티마이저가 불안정하다 실리에 박힌다 불안정하다고 그래서 통기 정보 수 안 하겠다. 
ipo로 가겠다. 이렇게 하시면 안 되고 풍기 정보를 잘 관리하는 쪽으로 방향을 잡고 그쪽을 더 연구하셔야지

참석자 1 
cbo 불안해서 못 쓰겠어 이렇게 하시면 안 된다는 얘기예요. 
방금 질문하신 그 이유에 대해서 db분들이 불안해하시거든요. 
실행기가 막 바뀌니까 어제까지 잘 돌아왔는데 오늘 막 자연이 나고 그러니까 오티마자는 더 좋다고 바쁜 건데 더 좋아질 수도 있지만 집중 팔구는 좋아지지만 하나라도 늦어지는 경우가 있거든요. 
오히려 더 그로 인해서 장애가 가는 수가 있기 때문에 불안정성이 있다라는 얘기를 하는 겁니다 시리어는 불안정하다

참석자 1 
또 다른 질문 있습니다. 힌트가 362개나 되는 거 처음. 
알았는데 혹시 여기에 있는 거 중에 좀 더 깊게 알고 싶은 거

참석자 4 
참고할 만한
참석자 1 
오라크 쪽에서
참석자 1 
352개에 대해서 전체에 대해서 예 전체는 다 알 필요도 없고 또 많은 많은 힌트들이 또 히든이에요. 
그러니까 내부적으로 사용하는 히트들이라서 다 할 필요도 없고요 말씀드린 것처럼 여기 있는 정도만 아시면 이 얼마나 하셨습니까 그동안 거의 안 거의 안 하셨으면 여기 있는 정도만 알면 돼요

참석자 1 
여기 있는 내용 중에 한 70~80%는 제가 수업 시간에 다 언급을 해 드릴 거고

참석자 4 
어
참석자 1 
1부는 패럴 우리가 경력 사인 이번까지 빠져 있으니까 경찰 같은 거 그것까지 저가 좀 설명드릴 건데 여기 있는 것만 해도 순간에 굳이 벌써부터 깊이 있는 것을 할 필요는 없겠죠. 
궁금해서요.
참석자 2 
어
참석자 1 
인터넷에서 검색해 보시면 힌트 목록을 이렇게 정리해가지고 이렇게 정리해 놓은 자료들이 있기는 하거든요. 
별로 도움이 안 돼요 그냥 기본적인 문법 어법 수준에서만 설명하고 있기 때문에 결국은 아까도 말씀드린 것처럼 힌트 목록은 중요하지 않고 이 각각의 힌트가 작동하는 내부적인 원리대로 이해하는 게 중요하거든요. 
그걸 모르면 힌트 또
참석자 1 
300개 안 되고 500개 안 되면 아무 의미가 없는 거거든요. 
내부 작동하면 이해하는 게 중요한 거니까 예 또 다른 질문 예 없으시면 잠깐 쉬겠습니다. 
지금 25분이죠. 15분간 쉬었다가 40분에 이어서 시작하겠습니다. 
하겠습니다.
