참석자 1 
유일하게 다르지 않는 양이 기리고 채소인데 기수 채소의 맨 위쪽에서 다루는 핵심적인 모형이 바로 함수예요. 
세계적인 사용자 정의 수를 쓰면 왜 문제가 되는지 참 제가 되는지 그 문제를 해결하기 위해서 어떤 방법들을 쓸 수 있는지 그런 부분을 바르는 그래서 거기에 보면 아시겠지만 가급적이면 쓰지 않으시는 게 좋습니다. 
상 가급적이면 반대로
참석자 1 
사용자 정의 프로시죠 디비 저장형 프로시는 사용을 하면 좋아요. 
오히려 성능이 근데 사용자 정의 함수는 기본적으로 성능이 안 좋습니다.

참석자 1 
지금 어쩔 수 없이 펑션 안에 있는 로직이 복잡해서 어쩔 수 없이 쓴다고 하면 쓰겠지만 그렇지 않다고 하면 예를 들면 단순하게 코드명 상품명 고객명 조이면서 갖고 있는데 조이 귀찮다고 펌션 만들어놓고 쓰는 거는 그건 아주 하면 안 될 일인 거예요. 
또 많이 쓰는 게 포맨팅이죠. 날짜 포맨팅 매번 퍼리마다 시스 데이트 투 캐릭터 시스 데이트 포맨팅

참석자 1 
그러면서 다 이렇게 귀찮으니까 팀장님이 딱 하고 폰트 하나 만들어주고 야 이었어 혹시라도 나중에 포맷이 바뀌게 되면 또 파스만 바뀌면 다 10도 바뀌니까 그게 모듈화도 되고 개발 활성도 좋아질 것 같지 않습니까 문제는 팀장님이 쓰라고 해서 만들어서 그걸 열심히 썼는데 성능은 거의 된다는 쓰시면 안 돼요 그런 목적으로

참석자 1 
사용 지적 의견을 쓰시면 큰 코다 있을 수 있습니다. 
더 자세한 얘기는 책을 통해서 우리 오락성 모드와 1번의 모장 오장에 보면 미구 채소와 있거든요. 
거기에 맨 뒤 파트 뒤쪽에 지금 설명된 내용들이 있으니까 참고하시면 되겠고요 나중에 그것까지 물어보시면 제가 잘 있도록 하겠습니다. 
또 다른 질문 없으신가요
참석자 1 
그런 성능이 이 테스트할 때는 잘 안 드러나요. 
보통 테스트할 때 가격가 나이 넉넉하지 않습니까 몇 건 20번 넣어놓고 할 때는 아무 차이가 안 나니까 그냥 문제 없어 쓰는데 나중에 문제는 데이터가 말이 그 그 때 이제 드러나는 거예요. 
처음에는 가격은 아마 테스트했다. 놓고 개발하는데 다시 이제 6개월이 지나서 마틴이 마이산 프럼 했고 데이터 들어오기 시작합니다. 
10만 건
참석자 1 
어제까지 분명히 잘 나왔는데 데이터가 1천만 권에 들어오는 순간 결과가 안 나오나 큰일 났다 이거 상장이 하면서 여기에 많이 있었는데 다 뜯어고쳐야 되겠네 이렇게 되는 거예요. 
함부로 쓰시면 안 되고
참석자 1 
그래서 우선은 개발자가 필요한 최소 블러만 있도록 서류를 효율적으로 잘 작성하셔야 됩니다. 
그렇게 쿼리를 잘 작성해서 오른쪽에 보시는 것처럼 쿼리를 잘 작성해서 스피를 수행을 했어요. 
그럼 저 커리는 이베스에 던져지는 거죠. 
트럼프 디드미스에서 저 커리를 받아서 파사가 받아서 파싱을 하고 도피 만자가 최적화를 하고 로소의 제드라이트가

참석자 1 
실질적인 프로스를 만들어내고 실행을 하는 거지 않습니까 그래서 실질적으로 저 커리를 추적하는 것은 옵티마이저다 옵티마이저 다만 우리는 옵티마자를 잘할 수 있는 좋은 좋은 모습으로 레시피를 짜는 것이고 그 쿼리를 공적으로 최적화하는 것은 옵티마자의 역할입니다. 
그래서 옵티마이저가 잘 할 수 있도록 좋은 기능을 많이 만들어줘야 돼요 대표적인 옵티마이저 팩터가 인덱스겠지 인덱스

참석자 1 
인덱스도 안 만들어주고 카운트를 해요. 
전체 건수를 전체 데이터 천만 건인데 천만 건인데 인비스도 안 만들어주고 왜냐하면 천만 권짜리 고객들 통기동을 찾아요. 
근데 인비스트도 없어 고객 명의 어떻게 따라 찾을까 천만 권을 다 읽어야 되겠죠.

참석자 1 
최적화는 옵티마이저가 수행하지만 적절한 수단을 제공하는 것은 사용자의 몫이다. 
그리고 전쟁에 나갈 때도 가장 기본적인 무기에 해당하는 총은 제공하잖아요. 
총도 제공 인덱스를 제대로 구성해 지 않다는 것은 기본적인 총도 제공하지 않고 나가서 싸우라 하는 것과 똑같다는 거

참석자 1 
옵티마이즈는 우리가 만들어 미리 만들어둔 길 중에서 가장 빠른 길을 찾아주는 엔진이에요. 
자기가 막 최적화하다가 여기서는 인덱스가 있으면 좋은데 인덱스를 만들거나 여기서는 파트이 있으면 좋겠네 파트를 만들고 그러지 않는다는 얘기죠 우리 지난주에도 얼핏 넘어간 거지만 최근에 자율 주행 db 오라클이 그런 걸 표방하면서

참석자 1 
인덱스를 자동으로 생산하고 있는 그런 기능들도 제공한다고 했는데 그 때 그런 기능은 사용될 가능성이 거의 희박합니다. 
조그만 중소형 기기능은 가능하겠죠. 하지만 대형 사이트들에서는 그런 기능을 쓸 일이 만만합니다. 
그래서 이미 만들어준 기회 사용자가 이미 만들어준 인덱스 중에서 가장 좋은 인덱스를 선택을 해주고

참석자 1 
가장 좋은 좋은 메소드를 찾아주고 하는 게 그만 이제 역할이에요. 
그래서 좋은 길을 깔아주는 것은 우리의 역할이 있다는 거죠. 
그다음에 인디스 말고도 다양한 기능들을 제공합니다. 
파티션 클러스터 구서 감소 iot fbi 펑션 베이스 인디스션 버틸 라이즈 큐 줄여서 mv 리졸트 캐시 파트는 지금 워낙 거의 데이터들이 많다. 
보니까 파트는 안 쓰는 데는 못 본 것 같고요

참석자 1 
지금까지 개발하면서 운영하는 거 클러스터 써보신 분 브라크 클러스터 써보신 분 없으시죠 그럼 아이오티 써보신 분 아이오티 리절트 캐시 써보신 분 디저트 캐시가 뭔지는 아시는 분 모틸라이드 뷰 엠비오 써보신 분

참석자 1 
왜 돈 안 드세요. 이런 거예요. 우리가 엄청나게 비싼 제품을 사다 놓고 몇 억짜리 제품을 사다 놓고 1천만 원치만 쓰고 있는 거예요. 
저런 종이분을 다 배제하고 인덱스만 가지고 성능을 높여보겠다고 악동 반응 하시는 거예요. 
제가 좀 이따 이제 인덱스를 시작하면 계속 거듭 말씀드릴 건데 인덱스는 많은 데이터 중에 소량의 데이터를 빨리 찾아주는 도구에 불과합니다.

참석자 1 
많은 트윙 팩터들이 있는데 그중에 일부분일 뿐인 거예요. 
여러 치닝 팩터 로트라인 팩터들이 있는데 그중에 작은 일부분에 불과하고 많은 데이터 중에 소량의 데이터를 빨리 찾아주기 위한 고객에 불과하다 그러면 많은 데이터 중에 상당히 많은 데이터를 빨리 읽으려면 어떻게 해야 되느냐 오히려 많은 데이터 중에 상당히 많은 상당량이 데이때 이 이길 수 있는 오히려 성능을 떨어뜨리는 주범이 되거든요. 
그 천만 건 중에 500만 건 천만 건 중에 300만 건

참석자 1 
이런 데이터들을 만약 인덱스를 키워서 읽으면 오히려 성능이 더 느려져요. 
그렇다고 천만 권을 풀스캔 할 것이냐 그것도 답은 아니죠. 
운영 환경에서 천만 건을 어떻게 표시 합니까 한 번 출시 할 수 있겠지만 만약에 그 커리를 여러 사용자들이 동시에 많이 실행하게 되면 또 난리 나는 거죠. 
잘 사용하지 않는 어쩌다 한번 실행하는 거는 풀스크 하더라도 그냥 한 번 풀스하는 거에 그이니까 그럴 수 있는데 딱 만들어서 놨더니

참석자 1 
너도 나도 좋다고 막 써요 동시에 막 백명이 붙어가지고 코리를 수행합니다. 
같은 테이블 천막 하는 테이블을 풀스캔을 1명이 동시에 하는 거예요. 
이 난리 나는 거거든요. 그럴 땐 그럼 인덱스가 도움이 안 되는데 그럼 어떻게 할 것이냐 그런 것들을 잘 활용을 해주셔야 되겠죠. 
천 클러스터 iot가 또 우리가 기본적으로 사용하는 소청 외에도 다양한 강력한 신무기들이

참석자 1 
제공되고 있고 그런 것들을 적절히 잘 활용하시는 것이 중요하다는 말씀입니다. 
그다음에 옵티마이저 모드 설정도 중요해요 우리가 전쟁할 때도 전략과 목표가 중요한 거잖아요. 
공기업할 때도 우리가 공격을 하는 이유를 소대원들에게도 준비원들에게 정확히 인식을 시켜줘야 돼요 안 그러면 뻘짓하는 그런 소원들이 나올 수 있습니다. 
우리가 왜 싸웠고
참석자 1 
어떤 목표를 가지고 진도를 노출하는지에 대한 목표를 분명히 제시해야 됩니다. 
우리가 최적화할 때도 항상 똑같은 최적화가 아니고 전체 범위 처리 최적화가 있고 최초 응가 소구 최적화가 있어요. 
옵티마이저 모드를 뭘로 설정했는지에 따라서 전혀 다른 실행력이 나옵니다.

참석자 1 
여러분들 제가 이제 계속 말씀드리지만 옵티마이저 생각할 때 제일 쉬운 거는 내비게이션이라고 그랬죠 내비게이션도 우리가 서울에서 예를 들면 대전까지까지 딱 누르면 제일 먼저 뭐가 나와요 대전에 다 선택하면 뭐가 나옵니까 몇 가지 대안 경로를 보여주죠 고속도로 우선 통행료 절감 이렇게 절감이 돼 있죠 거리 단축 또는 시간 단축 또 사용자가 뭘 선택하느냐에 따라서

참석자 1 
똑같이 대전을 간다고 하더라도 경부고속도로로 갈 수도 있고 지방도로로 갈 수도 있고 또 중앙 중부고속도로 로 갈 수도 있는 거예요. 
저는 이제 개인적으로 제주도를 되게 좋아해요. 
우리 와이프도 제주도를 되게 좋아해서 와이프가 좋아해서 자꾸 쫓아다니다 보니까 저도 제주도를 좋아하게 되는데 이전에 제주도를 몇 번 가는 것 같아요. 
말할 때는 여섯 일곱 번도 가고 적어도 한두 번은 가는 것 같은데 갈 때마다 아쉬운 게 뭐냐면

참석자 1 
우리가 제주도를 갈 때 사실 고속도로 보려고 가는 거 아니잖아요. 
그렇죠 산과 바다를 보기 위해서 제주도로 가잖아요. 
제주도도 요즘에 고도가 잘 말려져 있다. 
보니까 내비게이션을 통해서 예를 들면 제주공항에서 서귀포를 딱 가면 얘가 자꾸 고속도로로 가요. 
고속도로는 서울에서도 볼 수 있는데 굳이 제주도 가서 고속도로 보러 간 거 아닌데 그래서 저는 이제 내비게이션에 그런 일이 좀 있으면 좋겠어요. 
저는
참석자 1 
저는 바다를 좋아하거든요. 바다를 좋아하고 와이프는 산을 좋아해요. 
그래서 산악사고 오산 해변도로 산 이런 기능이 좀 있내비게이션 그런 게 없다. 
보니까 항상 어떻게 합니까 일단 눌러놓고 중간에 경유기를 추가하자 최정도로로 달리고 싶으면 에어를 중간에 어떤 카페를 하나 중간에 찍고 간다든지 상주 가고 싶으면

참석자 1 
산에 있는 어떤 백고지 같은 걸 중간에 한다든지 그렇게 해서 내가 어떤 별로 바로 이걸 하지 않습니까 그런 것처럼 옵티마즈에도 모드가 있어요. 
올로우즈 퍼스트 로즈 즉 전체 처리 속도 최적화할 것이냐 최초 사도 최적화 할 것이냐 그걸 어떤 걸 합득했냐에 따라서 커리 같은 퀄인데도 실력이 달라집니다.

참석자 1 
전체 속도 최적화는 사용자가 작성한 전제 조건에 해당하는 전체 집합이 있지 않습니까 전체 집합을 다 클라이언트 쪽으로 캐치한다는 전제 하에 가장 빠른 실행기를 선택해 주는 거예요. 
퍼스트 로우즈는 초청 다크 초적하는 전체 데이터는 10만 건인데 결과 집합을 만족하는 셋이 10만 건인데 그중에서

참석자 1 
앞쪽에 있는 10개 또는 100개를 빨리 리턴할 수 있는 그런 체행기를 만들어 달라 요구하는 옵티마저도 그래서 퍼스트 로드로 옵티마이즈 모을 맞춰주면 가급적이면 인덱스를 타는 경향이 있어요. 
전체 처리 속도로 맞춰주게 되면 상대적으로 풀스킨이 더 많이 나옵니다.

참석자 1 
올 로드를 했다고 해서 항상 측이 나오는 건 아니지만 퍼스트 로드를 했을 때에 비해서 상대적으로 프레스캔을 하는 비중이 점점 높아져요. 
제가 거듭 말씀드리지만 많은 데이터를 읽을 수 있다면 읽으면 속도가 더 느리거든요. 
그렇기 때문에 올로우즈를 맞춰주게 되면 이거죠. 
포스캔이 자주 나올 가능성이 높아집니 포스트 제다 제가 실습을 좀 이렇게 여러분 보여드리고 싶은데

참석자 1 
시간이 나서 한번 보여드릴까요. 그래서 보여드리고 여러분 제가 스텝도 올려드릴 테니까

참석자 1 
우선 그런 테이블 티 퍼지 테이블을 들고 올루즈를 이용해서 볼보그젝 기를 이용해서 특집을 만들어요. 
특집을 한 6~7만 명 정도 데이터가 들어가 있을 거고 고마 플레스 플러스 크리티 인덱스를 만들고요 이게 통계 정보를 만드는 케이트입니다. 
통계 정보 통계 정보 만들었고
참석자 1 
그 상태에서 옵티마이저 모듈을 실내에서 확인해 볼 건데

참석자 1 
실행률을 확인하기 위해서 오드 프레이스 트레스에서 트레이스만 보여주겠다. 
디스플레이만 보여주겠다는 방향을 주고 그다음에 옵티마이의 모듈를 올로드로 세팅합니다. 
전체 처리 속도 최적화예요. 이 상태에서 베시케문을 실행 기를 확인해 보게요 어때요

참석자 1 
아까 우리가 인덱스를 만들었잖아요. 인덱스를 인덱스 어떻게 만들었냐면 오노 플러스 크레이트도 만들었어요. 
인덱스를 오노 플러스 크레이트로 만들었다는 얘기는 인덱스가 언어로 정렬이 돼 있고 같은 언어에 대해서는 크리틱으로 정렬한다는 뜻이에요. 
그죠 맞죠. 그렇다고 하면 지금 서리분을 보시면 오너 조건을 줬어요. 
시스라는 오너 그리고 같은 오너에 대해서는 이미 크레이티브로 정렬이 돼 있겠죠. 
그래서 저 커리에 대해서 인덱스를 타는 순간

참석자 1 
자연스럽게 데이터는 크레이피지션으로 정리가 돼서 나오게 돼 있어요. 
그러면 인덱스를 쓰면 굳이 오도바이 따 안 해도 되겠죠. 
그죠 인디스를 타는 순간 이미 정렬돼 나올 거니까 그러면 우리가 30로 생각했을 때 인디스를 타면 좋겠네 그럼 다 이 비슷하겠네 하고 딱 봤는데 보세요. 
이 기술 타요 안 타요 안 타죠 그렇죠 트루스캔 하고 있습니다.

참석자 1 
차라리 풀스킹하고 정렬을 따로 하겠다는 얘기예요. 
왜 옵티마이저 경결장 했을까요. 시스 오너에 해당하는 오너가 시스 인 데이터가 많다는 얘기예요. 
그 많은 데이터를 인덱스를 타게 되면 오히려 더 늘리다라는 다 데이터를 한번 줄여볼까요.

참석자 1 
카운트에 보면 tp에는 6만 9879건이 있어요. 
그중에서 6만 9천 편 중에서 트럼프 페이스 앤 오너가 ccn 몇 건이냐 이렇게 보면 보시다시피 6만 건 중에 4만 8천 건이 저 조건 만족해요.

참석자 1 
보시는 것처럼 저 많은 데이터를 인덱스를 쓰게 되면 오히려 인덱스를 입고 테이블 에센스 하고 인덱스를 입고 테이블 에센스를 반복하면서 오히려 더 많은 랜덤 아이가 발생할 수도 있고 그것 때문에 더 느리다라고 판단하는 거예요. 
그런데 똑같은 퀄인데 오늘 옵티마이드 모드를 물로 좀 바꿔줘요. 
그리고 다시 한번 커리를 시행합니다.
참석자 1 
이러면 어떨 것 같았어요. 버스 로드를 한다는 얘기는 전체 데이터 중에 상위 n개 인계를 찾겠다는 거야 빠르게 시작했다. 
빠르게 렌턴할 수 있는 방법으로 허리를 만들어 달라 그런 얘기예요. 
실행기를 만들어 달라 인기를 탔어요. 
안 탔어요. 탔죠 그죠 똑같은 콜이에요. 
똑같은 콜인데 앞서는 풀스캔하고 오도바이를 했고 지금 인덱스를 이용을 해서 처리했습니다. 
그렇기 때문에 실행 계획은 뭐가 없어요.

참석자 1 
아까는 오토바이가 있었잖아요. 그렇죠 풀수 때문에 사고로 정렬을 했는데 지금은 인덱스를 태우는 순간 자동 정렬이 되니까 실행이 오토바이가 사라지는 거예요.

참석자 1 
나는 이 조건을 만족하는 상위 n개만 찾겠다. 
빨리 찾겠다. 그 방법으로 최적해 달라는 게 요 이렇게 옵티마이저 모드를 파라미터로 바꾸는 방법도 있고요 다시 올로드로 바꿀게요 다시 올로드를 바꾼 상태에서 퍼스트 로드라는 힌트로 제어할 수 있어요. 
퍼스트 로드 힌트
참석자 1 
다시 계속 하죠. 그렇죠 아까는 올라온다. 
했을 때 풀스캔 했는데 지금은 힌트로도 게 제거가 된다라는

참석자 1 
더 디테일하게 할 수 있어요. 여기다 바로에다가 그냥 퍼스트 로드는 몇 인지 몰라요 몇 개인지 모르는 상위 n개를 기준으로 추적해 달라는 거지 않습니까 그 구체적인 숫자를 제어할 수 있다는 거예요. 
10개 상위 10개 기준으로 실적 해달라

참석자 1 
그랬더니 어때요 코스트가 훨씬 줄어들었죠. 
그죠 코스트가 또는 상위 1 기준으로 해달라 1 기준으로 이렇게 할 수 있어요. 
그 코스가 아까 더 늘어났어요. 그렇죠 그래서 이 코스가 로수가 100개로 늘어났죠 그죠 예상 로수가 그러다가 코스터도 108니까 로스가 100으로 늘어나면서 코스트가 아까 4이던 것이

참석자 1 
5500으로 늘어나고 이렇게 디테일하게 제어를 할 수 있어요. 
보시는 것처럼 옵티마이저 모드를 어떤 설정하느냐에 따라서 물론 그냥 인덱스를 써도 되죠. 
힌트를 이렇게 안 하고 인덱스 인트를 써도 돼요. 
인덱스 써라
참석자 1 
이렇게만 해도 까불지 말고 내가 시킨 대로 이게 다 이렇게 할 수 있다는 얘기예요. 
이렇게 해서 할 수도 있지만 굳이 인증 인트를 쓰지 않더라도 포스트 로즈라는 이티만자 모드 설정만으로도 플랜이 그분한게 바뀔 수 있다는 얘기죠 그래서 옵티마저 모드 설정도 굉장히 중요한 옵티마저 필터 중에 하나입니다. 
그래서 디폴트 값을 잘 설정해 주셔야 돼요 볼론 이엔지 포스트

참석자 1 
그들 여러분 시스템 가서 한번 확인해 보세요. 
우리 시스템 뭘로 설정이 돼 있나 뭐 어떻게 확인하면 될까요.

참석자 1 
이렇게 뒤에 보시면 돼요 숙제입니다 한번 해보세요. 
해보시고 혹시라도 권한이 없으면 디디한테 물어보세요. 
과장님 우리는 오지 말고 그거 뭘로 세한 게 있습니까 라고 보니 그래 그게 뭔데 나는 문의가 뭔데 그런 부분이 될 수도 있어요. 
이미 알고 계신 분들도 있을 수도 있고요

참석자 1 
마지막으로 중요한 게 정확한 통계 정보 제공입니다. 
정확한 통계 정보 옵티마이저는 실제 데이터를 보는 게 아니라고 그랬죠 통계 정보만 보는 거예요. 
실제 내장에 관심 없어요. daa가 수집해 준 통계 정보 그 정보를 활용해서 최적화를 하는 겁니다. 
왜 현대전은 정보전이라는 얘기를 해요. 
그렇죠 정고전
참석자 1 
좋은 전투 장비를 갖춘 것도 중요하지만 보다 더 중요한 거는 광고전이다라는 점이죠. 
적권의 수요 지상과 지형 화력 진형 이런 것들을 바탕으로 작전을 해야 된다는 얘기입니다. 
효과적으로 쌓으려면 전골이 펼침 돼야 다 마찬가지로 옵티마이저 일을 잘하려고 하면 좋은 통계 정보를 제공해 준다는 거예요. 
최신의 통계 정보 우리 데이터는 지난 5년 동안 데이터 무지 많이 쌓여서 5천만 건으로 늘어 했는데 5년 전에 500만 건

참석자 1 
5년 전 이후로 한 번도 수출을 안 한 거예요. 
그럼 오티마는 여전히 500만 건을 보고 있는 거예요. 
그럼 잘못된 실행기를 만들 가능성이 높아진다는 다 중요한 얘기겠습니다만 제가 이 에서 가장 중요한 걸 뽑으라고 하면 첫 번째 인덱스 구성과 마지막 통제 점거예요.

참석자 1 
db 오라클이 자율 주행 얘기하고 다양한 인공지능적인 기능 또는 셀프 러닝 다양한 기능들을 많이 만들어내고 있지만 여전히 사람을 대체할 수 없는 게 인덱스와 통계 정보예요. 
통계 정보도 기본적으로 세팅은 돼 있죠 근데 그 세팅은 특정 환경에서만 어울리는 세팅이죠. 
우리 시스템하고는 전혀 안 맞는 세팅일 수 있는 거예요.

참석자 1 
근데 그걸 그대로 쓰고 계신 거죠. 디폴트를 번에 지난 얘기한 것처럼 밤 10시부터 아침 6시까지 골드로 세팅이 돼 있고 자동으로 돌게 돼 있어요. 
근데 그 시간에 우리는 다양한 배치 프로그램이 동시에 맞물려 돌고 있고 그러다 보니까 장애가 날 수 있다는 얘기죠 그래서 그것에 맞는 적절한 우리만의 성적으로 수입 정책을 만들어내야 되고 수집할 때 전수 검사를 할 것인지 샘플링 할 것인지 피스크램을 사용할 것인지 수집할 것인지 안 할 것인지

참석자 1 
통균 정보 수입할 때 중요한 요소 중에 하나가 시간이거든요. 
통균 정보를 수입하는 데 시간이 되게 많이 걸려요. 
그럼 시간을 단축시키려는 어떤 정책들을 갖고 와 있어야 되는데 시간이 많이 걸리는 대표적인 게 히스크임이에요. 
다른 것보다도 히스크형을 수집하는 순간 시간이 엄청 많이 걸립니다. 
근데 정작 우리 시장은 100% 가입만 쓰고 있어요. 
그 히스토램을 쓰여요 안 쓰여요 안 쓰죠 그죠 쓰지도 않은 히스토램 수집하느라고

참석자 1 
밤새 토기능을 수입하는 거예요. 시간이 엄청나게 늘어났다 그런데 우리는 100% 반을 쓰니까 히스트럼 굳이 필요 없다. 
그러면 옵션을 줘서 히트 수입을 안 하게 하는 거예요. 
그러면 6시간으로 돌던 평균 정도가 한 2시간 만에 끝날 수도 있는 거거든요. 
그 그리고 샘플링을 할 수도 있고 전수 검사를 할 수도 있고 다양한 것들을 고려해서 이 평면 전공 수입 정책을 만들어줘야 됩니다. 
그래서 제가
참석자 1 
후배들한테 맨날 그 얘기해요. 이 옵티마이저가 오라 필 얘기입니다. 
다른 피리는 아직 멀었어요. 다른 피리는 옵티마이저가 좋아지려면 아직 멀었습니다. 
티베로 같은 집이 맨날 하는 얘기랑 똑같다. 
그래서 우리는 오라클이랑 똑같은 게 장점이다. 
근데 모르는 사람은 그 말에 혹해요. 
저만 보니까 똑같거든 스q도 똑같고 귀도 똑고 다 똑같은 진짜 똑같은가 보다 하는데 저 같은 사람한테 그게 통하겠어요. 
어떻게 똑같을 수가 있겠습니까
참석자 1 
sk 구멍은 똑같지만 그 sk 처리하는 내부 옵티마를 어떻게 같을 수가 있겠어요. 
그 말에 속는 바보들이 너무 많다는 얘기죠 어떻게 똑같을 수가 있겠습니다. 
오라클은 수십 년 동안 옵티마저 계속 개발이 되고 있고 지금도 개발이 되고 있는 반면에 다른 기능들은 불과 몇 년 동안 개발했거든요. 
옵티마이가 받을 수가 없는 거잖아 질적으로는 여러분들 마스크 가지고 dw 구축했다는 얘기 들어보셨어요.

참석자 1 
마이 스킬은 해시즌이라는 게 나온 지 불과 얼마 안 됐거든요. 
해시 지원이 없다는 얘기는 병량 처리가 기본적으로 어렵다는 얘기예요. 
나중에 조인할 때 얘기하고 패션이 없는 비비였어요. 
얼마 전까지만 해도 그런 비비가 결국의 차이가 얼마나 있

참석자 1 
프리가 줄어드는 op성 중소형 db에 주로 쓰일 수밖에 없는 거죠. 
그리고 쿼리도 복잡하게 안 짜요 그 뒤에 가보면 튜닝이 훨씬 쉬워요. 
허리들이 다 단발성 커리들이 많기 때문에 인덱스 트닝이 대부분이에요. 
근데 오라클은 워낙 옵티마이즈가 엔딩이 빡빡하니까 허리들을 무지 복잡하게 씁니다. 
조인 막 10개 서브 커리에 막 짜증 나게 되게 짜요. 
그만큼 옵티마이즈가
참석자 1 
진화돼 있기 때문에 그런 커리들도 콤플렉스와 커리들도 다 처리를 해준다는 얘기죠 똑같을 수가 없는 거예요. 
오라클이 그만큼 발전이 되고 있기 때문에 저희들이 위기의식을 느껴요. 
가끔 옵티마 줄 보면서 배워요. 이런 상황에서 옵티마가 이런 플랜을 만들어내네 또 하나 배웠다. 
옵티마이저의 최적화된 실행력을 통해서 신 기법들을 배웁니다. 
저희들이
참석자 1 
예전에는 옵티마이저의 실수를 저희들이 찾아내서 그 실수한 부분을 다른 걸로 찾아주는 역할을 제대로 했는데 이제 거꾸로 신경 보면서 감탄을 해요. 
이런 플랜을 만들어내네 이럴 때 이렇게 커리를 하면 되는 거였구나라고 배웁니다. 
그래서 튜너들이 위기감을 느껴요. 우리 이제 클났다 바보는 만큼 자기 힘들겠다. 
그래서 저는 이제 후배들한테 하는 얘기가 걱정하지 마라

참석자 1 
오티마즈가 암만 좋아져도 이거를 대신해줄 수는 없다. 
결국 이거는 우리 사람이 해줘야 되는 거다. 
개발자들 또는 db에들 근데 개발자 db 분들이 이 원리를 정확히 알고 비데스 구성하는 분들 거의 없거든요. 
우리 이따 인덱스 들어가 보면 아는 사례들을 제가 말씀드릴 텐데 이거 제대로 구성할 지 아는 건 없어요. 
개발자 모르면 dba라도 잘하면 되는데 dba 사실 모르거든요. 
dba는 튜너가 아니에요. dba는 데이터 베이스 관리자지 튜너가 아닙니다.

참석자 1 
그래서 개인적인 관심이 높아서 트윙을 열심히 공부하는 기기들은 기기 관리도 잘하고 팀도 잘하는 기기가 읽고 있을 뿐이지 대다수의 기기들은 튜닝을 못합니다. 
사실은 근데 다 똑같이 db이니까 다 하는 줄 알고 막 개발 쪽에 요청을 막 합니다. 
예 나도 모르는데 요청하니까 또 어떻게든 확인을 해야 되니까 막 열심히 취임하죠. 
제대로 취임을 못하는 것 같아 그다음에 또 이거 통계 정보

참석자 1 
통계 정보 수집 정책 어떻게 통계 정보를 수집할지에 대한 정책을 만드는 일이 튜너의 역할이 돼야 된다고 저는 주장하는 거예요. 
이런 것도 좋지만 어떻게 이것을 구성할 것이냐 통계 정보는 어떻게 수집해야 되는지에 대한 그 사이트만의 특성에 맞게끔 정책들을 세팅해 주는 역할이 튜너의 역할이 돼야 된다라고 저는

참석자 1 
늘 얘기를 하고 하는데 실제로 그렇게 많은 사이트에서 장애 나서 성능적으로 문제가 생겨서 급하게 불러서 가보면 10주 팔고는 통계 정도 어제까지 잘 돌던데 갑자기 늦어졌어요. 
그런 경우에는 가구로 10주 팔고 통계 정도 문제입니다. 
그래서 그 문제가 된 커리에서 사용하는 테이블의 통계 정보를 딱 새로 갱신해 주는 순간 아니면 새로 갱신하는 것도 그 나름의 위험이 있으니까 어디로 되돌리는 거죠. 
어디 어디 상태로
참석자 1 
딱 되돌리는 순간 바로 그냥 플랜이 정상으로 돌아오면서 시스템이 살아나요. 
특히 연말에 연초에 월말 월초에 사고가 많이 납니다. 
파트 추가하면서 파트 테이블에 대한 통계 정보를 어떻게 관리할지에 대한 그런 정책들도 있어야 되는 거고 그런 정책 없이 그냥 디폴트에 맡겨 놓으니까 장애가 나는 거거든요. 
그래서 성능을 위해서 안정성을 위해서 이 두 가지 요소를 잘 세팅하는 것이

참석자 1 
무엇보다 중요하다는 말씀
참석자 1 
마지막으로 정리하면 일단 개발자가 커리를 꿀쭉으로 잘 작성을 해야 됩니다. 
으로 작성을 해 주셔야 되고 그렇게 작성하는 커리를 옵티마이저가 잘 최적할 수 있도록 좋은 옵티마저 필터들을 제공해 주셔야 되고 아무리 인덱스를 잘 만들어주고 아무리 통계 정보를 잘 수집해 주고 옵티마이저도 잘 설정해 주고 아무리 그래도 옵티마이저는

참석자 1 
결국 우리 같은 개발자들이 만든 소프트웨어에 불과합니다. 
절대 완벽할 수가 없다는 얘기죠
참석자 1 
그래서 최적의 옵티마이저 필터를 제공했다면 가급적 옵티마이저 판단에 맡기는 것이 바람직할 수 있지만 할 수 있지만 상황에 따라서는 크게 안 통하는 경우가 있습니다. 
지금 얘기했다시피 증권사 같은데 실행 계획이 딱 보는 순간 통계 정부가 바뀌었다고 그래서 딱 시행이 바뀌는 순간 바로 장애가 나면서 소송으로 연결되는 그런 일정 프리한 시스템도 있거든요.

참석자 1 
그 시스템은 제가 지난주에 말씀드린 것처럼 적극적으로 수정하는 힌트를 피트하게 잡아야 돼요 피트하게 그렇지 않은 쿼리들은 그냥 무수하게 좀 상황에 따라서 볼 수 있다고 하더라도 말하자면 그 커리가 혹시나 가 문제가 생기더라도 시스템에 큰 영향을 주지 않은 프레드 그럼 프레드는 오프라인에 맡겨주면 좋죠 일일이 다 칭할 수는 없잖아요. 
그렇죠 스케 만 개인데 만 개가 어떻게 다 한

참석자 1 
그중에서 상위 한 100개 10개 정도를 깨끗하게 트윙해서 절대 닿지 않도록 하는 그런 트윙이 필요합니다. 
그래서 그런 것들을 위해서 우리 개발자들의 역할이 필요한 거고 ceo 기술이 고도로 발전하고 있기는 하지만 절대 완벽하지 않다. 
옵티머스 힌트 사용은 불가피하다 지난주에도 그 질문했잖아요. 
제가 그때 답변 드렸어요. 불가피하다
참석자 1 
안 쓰면 좋겠지만 현실적으로 안 쓸 수가 없다라는 거죠. 
그래서 데이터베이스 애플 전 개발자라고 한다면 인덱스 조인 옵티마이저 기본 원리를 이해하고 그것을 바탕으로 최적의 에센스 등록을 유도할 수 있는 능력들을 필수적으로 갖춰야 된다 저는 교육의 목표 자체가 개발자들에게 맞을 수 있다라는 걸 약간 말씀드릴 휴님은 튜너가 하면 좋지만

참석자 1 
db가 하는 역할은 아닙니다. db db 역할은 아니고 튜닝은 본질적으로 개발자 역할인 거예요. 
개발자 역할에 대한 인식을 가지고 제가 이제 개발자의 장인 정신이라는 그런 표현을 썼는데 내 스케일은 내가 지킨다 그런 장인 정신이 필요하다는 거죠. 
제가 이런 표현을 왜 썼냐면 이제 제가 이제 예전에 코스콤에 들어갔어요. 
먼저 있던 체너가 이제 철수를 하면서 제가 대신 업무를 맡게 됐는데

참석자 1 
그 코너 분이 라이프가 일본에서 활동하는 개발자분이래요 그래서 이제 한국에 있는데 다시 일본으로 가서 개발하고 싶다고 해서 남편분이 아내를 쫓아서 일본으로 가기로 한 거예요. 
그래서 그분이 이제 프로트 처시하는 말을 제가 이제 대신 들어갔는데 그분이랑 이렇게 밥을 먹고 커피를 마시는 과정에 그분이 그런 얘기를 해주더라고요 1번 개발자들은 이 장인 장신이 투철하 돼요

참석자 1 
그래서 내가 짠 커리를 누가 외국 사람들이 튜너든 갑이든 누가 외국 사람 와서 커리를 잘 짜니 못 짜니 손으로 짜니 발로 짜니 이런 얘기를 하는 거를 되게 듣기 싫어하는데요. 
사실은 그게 일본 개발자들만 그러겠어요. 
우리나라 개발자들도 마찬가지죠 내가 짠 거리를 누가 옆에 사람이 와가지고 야 너 커리를 이렇게 짜면 되겠냐 하면서

참석자 1 
핀잔을 주면 그 좋아하는 개발자가 누구 있겠어요. 
똑같이 기분 나쁘죠 근데 이번 개발자들은 그런 소리를 듣기 싫으니까 내 sk는 내가 지킨다라는 그런 장애물을 가지고 철저하게 t 공부를 해서 손 볼 데 없게 완벽하게 커리를 최적화를 시켜놓은다는 얘기예요. 
우리나라 개발자는 어떻습니까 듣기 싫은 건 듣기 싫은 거고 팀을 공부하기 싫어해요. 
심지어 어떤 경우가 있는지 아세요.
참석자 1 
제가 트리 해서 딱 갖다 주면 반영을 해야 될 거 아닙니까 허리를 이렇게 바꾸세요. 
또 키트를 여기다 이렇게 넣으시면 됩니다. 
또는 이베스를 이렇게 신청해서 이렇게 그러면 갖다 주면 반응 못했다고 됐지라고 내가 개발하러 왔지 튜닝하러 왔냐 그래요 내가 개발하러 왔지 튜닝하러 왔지

참석자 1 
주로 이제 나이 많은 개발자분들이 주로 많이 해요. 
젊으신 분들은 막 재미있어 하고 관심을 보이는데 나는 개발자들은 개 갖다 주면 막 짜증 내기도 하고 그분들도 이해가 되는 건 뭐냐면 당장 이번 주까지 저희가 개발 물량이 있잖아요. 
그걸 물량을 다 쳐내야 되는데 중간에 튜너 가가지고 에스크를 이렇게 다 들이밀면 프럼 수정해야 되죠 컴파일 해야 되죠 또 실행해서 결과 만는지 테스트해야 되죠

참석자 1 
일정이 밀린다는 얘기예요. 그러니까 이제 억지를 부리는 거죠. 
내가 튜닝 하러 왔냐 배가 개발로 왔지 하면서

참석자 1 
개발자들 스스로가 결과를 올바르게 만드는 것은 내 역할인데 좋은 성능을 내는 건 내 역할이 아니다라는 인식을 갖고 있다는 얘기예요. 
그것은 누가 하느냐 db에 하든지 또는 외부에서 틸로가 하는 역할이라고 생각한다는 얘기죠 제가 첫날부터 말씀드린 것처럼 과거에는 우리가 에시피를 쓰지 않았어요.

참석자 1 
프로그램을 직접 론징을 구현했습니다. 
at을 읽어서 bt을 가서 시크라는 명령을 찾고 그다음에 또 이거 자체를 내가 론징을 짰어요. 
직접 데이터를 출력한 로직을 그러면 결과 집합을 빨리 만들어내는 것도 내 역할이고 내가 짠 로직이 빠른 결과를 그러니까 정확히 만든 정확한 결과를 리턴하는 것도 내 역할이고 그 결과 로직이 알고리즘이 돌아서 빠르게 리턴하도록 만드는 것도 내 역할인 거예요. 
내 알고리즘인 거니까 그죠
참석자 1 
근데 그렇게 하다 보니까 개발 성성이 떨어져요. 
왜냐하면 조인하는 오퍼레이션 또는 정렬한 오퍼레이션 모든 크림마다 공통적으로 있는 것들을 매번 코딩을 해가면서 생산성이 떨어지니까 또 그렇게 하지 말고 에스클문이라는 새로운 언어를 통해서 이걸 통해서 해라 그러면 조인하는 처리 정렬한 처리 로 파이 처리 이런 것들을 자동으로 해주는 옵티마이즈 엔진을 제공해 준 거예요. 
그래서 옵티마이즈 대신 해줄 테니까 너는 개발에 집중해라

참석자 1 
하지만 그것도 내 역할이었던 거잖아요. 
원래부터 그렇죠 내 역할이었던 건데 바쁜 나는 업무 로직에 집중하고 늘상 반복되는 어떤 그런 처리는 원팀이자 대신하도록 해준 거죠. 
부하를 한 명 더 주는 거예요. 그럼 부하 직원을 줬으면 그 부하 직원이 일을 잘하는지 복지마자 만들어낸 실행이 좋은 실행력인지 또 수행했을 때 빠르게 나오는지 안 나오는지도 체크해야 되는 것은 내 역할인 거죠. 
그죠 대신해주지만 체크해야 될 역할은 나 돼 있다는

참석자 1 
체크해서 좋으면 그것을 쓰면 되고 좋지 않으면 내가 힌트를 주든 아니면 커리를 바꾸든 해가지고 좋은 경로 유도할 수 있어야 되는 것이고 그것이 과거부터 내려오던 원래부터 개발자의 책임 역할이었다라는 얘기예요. 
근데 어느 순간부터 개발자분들이 알비기를 쓰니까 그건 내가 할 일이 아니다. 
누가 다른 사람이 할 일이다. 이렇게 인식을 한다는 얘기

참석자 1 
그건 의 착각이고 분명히 개발자 역할입니다. 
제가 첫날 좀 한 1시간 반 정도 하는 얘기가 있는데 그때 마지막 결론은 사실 이 얘기인데 제가 이렇게 자료들을 보여드리면서 하는데 제가 그걸 생략하고 지금 말씀을 드리는 거예요. 
여러분들 그 차트를 보시면 신용 개발자가 하는 게 맞네 이렇게 당연히 인식하실 겁니다. 
신중에도 여러 가지가 있거든요. 데이터 베이스트윙이 있고 시스템 수이 있고

참석자 1 
모델도 있고 여기 여러 가지가 있는데 가장 핵심은 애플레이션 투이거든요. 
앰플레이션 투이 쇼플레이션 투이니까 당연히 애플레이션 개발자가 해야 되는 거죠. 
db 파라미터 아까 보여드린 옵티마이저 세팅이라든지 또는 데이터 데이터 파일 설정 테이블 스펙스 설계 이런 것들은 dba가 해야 되는 거지만 그것을 벗어나는 어떤 조인을 어떻게 할 것인지 인덱스를 어떻게 활용할 것인지 또 아까 질문하신 것처럼 펑션을 쓸 것이냐 안 쓸 것인지

참석자 1 
락이 걸렸을 때 락을 모니터링 하는 건 bb의 역할이지만 블로킹에 의해서 데드라인이 생기거나 그런 것이 다시 재연되지 않도록 로직을 잘 짜는 건 또 개발자 역할인 거잖습니까 튜닝의 내용들을 다 뜯어보면 저거 다 개발자 역할이구나 자연스럽게 이해하게 돼 있어요. 
그런 장의식을 가지고
참석자 1 
바라보시고 접근하시는 것이 좋겠다는 말씀을 드립니다. 
여기까지 질문 있으실까요.
참석자 1 
제가 이제 광주은행의 교육을 한 3년 4년을 했거든요. 
그 교육을 하게 된 계기가 그쪽 디데이가 저한테 요청을 하더라고요 기계는 단 둘밖에 없는데 개발자는 수십 명이에요. 
근데 그 수십 명이 만들어낸 게스트들을 dba가 트윙한다고 사실 자기도 트윙을 잘 못하는데 못하는데 당연히 위에 분들은 dba니까 트윙도 잘하는 줄 알고

참석자 1 
튜닝 업무를 개발자들이 da에게 주고 디네들이 계속 그 수십 명의 개발자들이 만든 튜닝을 하고 있다라는 얘기예요. 
개발자들이 관심을 안 가는데요. 성님 그래서 저한테 교육을 요청하면서 제발 이 이식 전환을 좀 시켜달라 튜닝은 대화자의 역할이다라는 그런 식전을 좀 시켜달라고 간곡히 갖고 부탁을 하더라고요 그래서 제가 오늘 한 게 들렸던 그 말씀을

참석자 1 
정민행 개발자 분들 모아놓고 계속 교육을 몇 년째 하고 있습니다. 
계속 신입생 들어오니까 올해도 11월 작년이죠. 
작년 12월에 어 어느 조직이나 다 똑같은 거 같아요. 
제가 어떤 경우도 봤냐면 코스콤이라는 회사가 있어요. 
거기는 딱 나눠져 있습니다 시스템 장애가 났는데 db에서 장애가 나지 않습니까 무조건 dba의 책임이에요. 
허리가 문제가 있어서
참석자 1 
자기가 나는 커리는 개발자 들었을 거 아니에요. 
그렇죠 근데 커리는 개발자인데 그 커리 중에서 장애가 나는 장소는 어디예요. 
ap 서버가 아니고 db 있지 않습니까 그럼 그 db의 책임인 거예요. 
d 그냥 아주 그냥 딱 잘라서 ap 서버 쪽에서 발달하면 개발자 책임 디비 쪽에서 발견하면 이 열을 막는 하고 db를 책임인 거예요. 
그 그 db에는 어떤 것도 반영하지 않습니다. 
제가 주기적으로
참석자 1 
진단을 들여서 이제 팀이 해 주는데 팀 해서 딱 주지 않습니까 그냥 보고 좋네요. 
사실 반영은 안 해요. 왜냐하면 반응하다가 문제 생기면 다 자기 책임이거든요. 
도우라고 반응하는 건데 예를 들면 도라고 인디스를 인덱스를 추가하면 굉장히 빨라져요. 
그 반영 안 해요. 반응했다가 그 코리는 빨라지는데 혹시라도 다른 코리가 늘어지는 문제가 생기면 자기가 그거 쓰는 거거든요. 
코리 바꾸는 것도 마찬가지예요. 이 손 안 되고 커리만 바꿔도 되게 빨라지는데

참석자 1 
네 알겠습니다. 그냥 잘 저장해 두시고 나중에 필요한 거 쓸게요 절대 반영 안 합니다. 
굉장히 보수적으로 되는 거예요. 개발자는 수십 명인데 디비를 혼자서 경험을 하려다 보니까 지난 10년 동안 살아오면서 너무 스트레스를 많이 받는 거 여기 분류하고 저기 분류하고 장애가 나면 이게 비비 책임이냐 재발적 책임이냐

참석자 1 
나는 그 커리 본 적도 없는데 코리아 장애 계획하는데 비교해 장연놨으니까 니 책임이라고 니가 책임지라고 하고 증권사다 보니까 자해가 나면 또 이렇게 막 소송으로 가기도 하고 제가 그 소송에 대비해서 그 뒤에 어떤 이런 우리 책임이 아닙니다라는 것을 이렇게 써야 되나 봐요 그걸 저보고 좀 써달라고 봐달라고 하더라고요 이 문장에서

참석자 1 
제가 소송 걸 같이 받은 적이 있어요. 
그 논리가 맞는지 틀린지 보수가 될 수밖에 없는 거예요. 
뒤에 정작 문제는 개발자가 일으켰는데 책임을 지기에게 지우니까 굉장히 보수적으로 이렇게 운영이 되는 거야 더 좋은 게 있어도 반응 안 하는 그런 어떤 추징할 때는 기술만으로 되는 게 아니고 기업 문화 중요합니다. 
이게 어떤 시스템이고
참석자 1 
또 그 시스템을 운영하는 운영 조직의 기업 문화도 중요하고 참 어렵습니다. 
잘 소리가 들려졌는데 여기까지 하고 잠깐 쉬었다가 지금 25분이죠. 
30분이네 40분에 이어서 드디어 본격적으로 인베스트를 들어가겠습니다. 
여태까지는 안 쓰셨고 본격적으로 이제 인베스트를 시작하도록 하겠습니다.

참석자 1 
2시에 뵙겠습니다.
